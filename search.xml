<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2022/03/29/Spring-boot%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/03/29/Spring-boot%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Spring-boot学习"><a href="#Spring-boot学习" class="headerlink" title="Spring-boot学习"></a>Spring-boot学习</h3><p>官方文档：<a href="https://docs.spring.io/spring-boot/docs/current/reference/html/index.html">https://docs.spring.io/spring-boot/docs/current/reference/html/index.html</a></p><p>使用文档：<a href="https://docs.spring.io/spring-boot/docs/current/reference/html/using.html#using.build-systems.dependency-management">https://docs.spring.io/spring-boot/docs/current/reference/html/using.html#using.build-systems.dependency-management</a></p><h2 id="一：SpringBoot-HelloWord"><a href="#一：SpringBoot-HelloWord" class="headerlink" title="一：SpringBoot HelloWord"></a>一：SpringBoot HelloWord</h2><p>一个功能：浏览器发送hello请求并处理，相应Hello Word字符串</p><h3 id="1-创建一个新的Maven工程；Jar"><a href="#1-创建一个新的Maven工程；Jar" class="headerlink" title="1.创建一个新的Maven工程；Jar"></a>1.创建一个新的Maven工程；Jar</h3><h3 id="2-导入一个Springboot相关的依赖"><a href="#2-导入一个Springboot相关的依赖" class="headerlink" title="2.导入一个Springboot相关的依赖"></a>2.导入一个Springboot相关的依赖</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token generics"><span class="token punctuation">&lt;</span>parent<span class="token punctuation">&gt;</span></span>    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>parent<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">1.5</span><span class="token number">.9</span><span class="token punctuation">.</span>RELEASE<span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>parent<span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>dependencies<span class="token punctuation">&gt;</span></span>    <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>        <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>        <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>web<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>dependencies<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-编写一个主程序类MainApplication-启动主程序"><a href="#3-编写一个主程序类MainApplication-启动主程序" class="headerlink" title="3.编写一个主程序类MainApplication 启动主程序"></a>3.编写一个主程序类MainApplication 启动主程序</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">leyue<span class="token punctuation">.</span>ljp<span class="token punctuation">.</span>boot</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span><span class="token punctuation">;</span><span class="token comment">/** *  @SpringBootApplication 来标注主程序类 说明这是一个Spring boot应用 */</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//将springboot启动起来</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">MainApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-编写Contrtoller层和Service层"><a href="#4-编写Contrtoller层和Service层" class="headerlink" title="4.编写Contrtoller层和Service层"></a>4.编写Contrtoller层和Service层</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">leyue<span class="token punctuation">.</span>ljp<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ResponseBody</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/hello"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">handle01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Hello my first spring-boot2!"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5、运行主程序测试"><a href="#5、运行主程序测试" class="headerlink" title="5、运行主程序测试"></a>5、运行主程序测试</h3><h3 id="6、简化部署"><a href="#6、简化部署" class="headerlink" title="6、简化部署"></a>6、简化部署</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 这个插件，可以将应用打包成一个可执行的jar包；<span class="token operator">--</span><span class="token operator">&gt;</span>   <span class="token generics"><span class="token punctuation">&lt;</span>build<span class="token punctuation">&gt;</span></span>       <span class="token generics"><span class="token punctuation">&lt;</span>plugins<span class="token punctuation">&gt;</span></span>           <span class="token generics"><span class="token punctuation">&lt;</span>plugin<span class="token punctuation">&gt;</span></span>               <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>               <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>maven<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span><span class="token operator">/</span>plugins<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>build<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、Spring在核心配置文件"><a href="#二、Spring在核心配置文件" class="headerlink" title="二、Spring在核心配置文件"></a>二、Spring在核心配置文件</h2><h3 id="使用-Value进行映射"><a href="#使用-Value进行映射" class="headerlink" title="使用@Value进行映射"></a>使用@Value进行映射</h3><p>一、Spring在核心配置文件application.properties自定义配置一个一个获取@Value</p><h3 id="1-新建一个application-properties"><a href="#1-新建一个application-properties" class="headerlink" title="1.新建一个application.properties"></a>1.新建一个application.properties</h3><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">server.port</span><span class="token punctuation">=</span><span class="token attr-value">8080</span><span class="token attr-name">server.servlet.context-path</span><span class="token punctuation">=</span><span class="token attr-value">/</span><span class="token attr-name">school.name</span><span class="token punctuation">=</span><span class="token attr-value">zhangshanzhiyejishuxueyuean</span><span class="token attr-name">websit</span><span class="token punctuation">=</span><span class="token attr-value">https:175.178.51.999</span><span class="token attr-name">asd.name</span><span class="token punctuation">=</span><span class="token attr-value">李津澎</span><span class="token attr-name">asd.websit</span><span class="token punctuation">=</span><span class="token attr-value">https://175.178.51.1111</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-新建一个config的包-新建asdConfig的类"><a href="#2-新建一个config的包-新建asdConfig的类" class="headerlink" title="2.新建一个config的包 新建asdConfig的类"></a>2.新建一个config的包 新建asdConfig的类</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">leyue<span class="token punctuation">.</span>ljp<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>context<span class="token punctuation">.</span>properties<span class="token punctuation">.</span></span><span class="token class-name">ConfigurationProperties</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Component</span><span class="token comment">//交给Spring管理</span><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"asd"</span><span class="token punctuation">)</span><span class="token comment">//标注这个是头的名称 对应properties那边</span><span class="token keyword">public</span> <span class="token keyword">class</span> asdConfig <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> websit<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getWebsit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> websit<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setWebsit</span><span class="token punctuation">(</span><span class="token class-name">String</span> websit<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>websit <span class="token operator">=</span> websit<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-新建一个Controller"><a href="#3-新建一个Controller" class="headerlink" title="3.新建一个Controller"></a>3.新建一个Controller</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">leyue<span class="token punctuation">.</span>ljp<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">leyue<span class="token punctuation">.</span>ljp<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>config<span class="token punctuation">.</span>asdConfig</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IndexController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span> <span class="token comment">//自动注入</span>    <span class="token keyword">private</span> asdConfig asdConfig<span class="token punctuation">;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"fuck"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">fuck</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"asdConfig："</span><span class="token operator">+</span>asdConfig<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">" "</span><span class="token operator">+</span><span class="token string">"asdwebsit:"</span><span class="token operator">+</span>asdConfig<span class="token punctuation">.</span><span class="token function">getWebsit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-测试"><a href="#4-测试" class="headerlink" title="4.测试"></a>4.测试</h3><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h1 id="第05课：Spring-Boot中的MVC支持"><a href="#第05课：Spring-Boot中的MVC支持" class="headerlink" title="第05课：Spring Boot中的MVC支持"></a>第05课：Spring Boot中的MVC支持</h1><p>Spring Boot 的 MVC 支持主要来介绍实际项目中最常用的几个注解，包括 <code>@RestController</code>、 <code>@RequestMapping</code>、<code>@PathVariable</code>、<code>@RequestParam</code> 以及 <code>@RequestBody</code>。主要介绍这几个注解常用的使用方式和特点。</p><h2 id="1-RestController"><a href="#1-RestController" class="headerlink" title="1. @RestController"></a>1. @RestController</h2><p><code>@RestController</code> 是 Spring Boot 新增的一个注解，我们看一下该注解都包含了哪些东西。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>TYPE<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span><span class="token annotation punctuation">@Documented</span><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@ResponseBody</span><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">RestController</span> <span class="token punctuation">{</span>    <span class="token class-name">String</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以看出， <code>@RestController</code> 注解包含了原来的 <code>@Controller</code> 和 <code>@ResponseBody</code> 注解，使用过 Spring 的朋友对 <code>@Controller</code> 注解已经非常了解了，这里不再赘述， <code>@ResponseBody</code> 注解是将返回的数据结构转换为 Json 格式。所以 <code>@RestController</code> 可以看作是 <code>@Controller</code> 和 <code>@ResponseBody</code> 的结合体，相当于偷个懒，我们使用 <code>@RestController</code> 之后就不用再使用 <code>@Controller</code> 了。但是需要注意一个问题：如果是前后端分离，不用模板渲染的话，比如 <a href="https://so.csdn.net/so/search?q=Thymeleaf&amp;spm=1001.2101.3001.7020">Thymeleaf</a>，这种情况下是可以直接使用<code>@RestController</code> 将数据以 json 格式传给前端，前端拿到之后解析；但如果不是前后端分离，需要使用模板来渲染的话，一般 Controller 中都会返回到具体的页面，那么此时就不能使用<code>@RestController</code>了，比如：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token string">"user"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-RequestMapping"><a href="#2-RequestMapping" class="headerlink" title="2. @RequestMapping"></a>2. @RequestMapping</h2><p><code>@RequestMapping</code> 是一个用来处理请求地址映射的注解，它可以用于类上，也可以用于方法上。在类的级别上的注解会将一个特定请求或者请求模式映射到一个控制器之上，表示类中的所有响应请求的方法都是以该地址作为父路径；在方法的级别表示进一步指定到处理方法的映射关系。</p><p>该注解有6个属性，一般在项目中比较常用的有三个属性：value、method 和 produces。</p><ul><li><strong>value 属性</strong>：指定<strong>请求的实际地址</strong>，value 可以省略不写</li><li><strong>method 属性</strong>：指定<strong>请求的类型</strong>，主要有 GET、PUT、POST、DELETE，默认为 GET</li><li><strong>produces属性</strong>：指定<strong>返回内容类型</strong>，如 produces = “application/json; charset=UTF-8”</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/test"</span><span class="token punctuation">,</span> produces <span class="token operator">=</span> <span class="token string">"application/json; charset=UTF-8"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/get"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span>GET<span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-PathVariable"><a href="#3-PathVariable" class="headerlink" title="3. @PathVariable"></a>3. @PathVariable</h2><p><code>@PathVariable</code> 注解主要是用来<strong>获取 url 参数</strong>，Spring Boot 支持 restfull 风格的 url，比如一个 GET 请求<strong>携带一个参数 id 过来</strong>，我们将 id 作为参数接收，可以使用 <code>@PathVariable</code> 注解。如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/user/{id}"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testPathVariable</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"获取到的id为："</span> <span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里需要注意一个问题，如果想要 url 中占位符中的 id 值直接赋值到参数 id 中，需要保证 url 中的参数和方法接收参数一致，否则就无法接收。如果不一致的话，其实也可以解决，需要用 <code>@PathVariable</code> 中的 value 属性来指定对应关系。如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/user/{idd}"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testPathVariable</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"idd"</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"获取到的id为："</span> <span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对于访问的 url，占位符的位置可以在任何位置，不一定非要在最后，比如这样也行：<code>/xxx/{id}/user</code>。另外，url 也支持多个占位符，方法参数使用同样数量的参数来接收，原理和一个参数是一样的，例如：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/user/{idd}/{name}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testPathVariable</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"idd"</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"获取到的id为："</span> <span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"获取到的name为："</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行项目，在浏览器中请求 <code>localhost:8001/test2/user/2/zhangsan</code> 可以看到控制台输出如下信息：</p><p>获取到的id为：2<br>获取到的name为：zhangsan</p><h2 id="4-RequestParam"><a href="#4-RequestParam" class="headerlink" title="4. @RequestParam"></a>4. @RequestParam</h2><p><code>@RequestParam</code> 注解顾名思义，也是获取请求参数的，上面我们介绍了 <code>@PathValiable</code> 注解也是获取请求参数的，那么 <code>@RequestParam</code> 和 <code>@PathVariable</code> 有什么不同呢？主要区别在于： <code>@PathValiable</code> 是从 url 模板中获取参数值， 即这种风格的 url：<code>http://localhost:8080/user/{id}</code> ；而 <code>@RequestParam</code> 是从 request 里面获取参数值，即这种风格的 url：<code>http://localhost:8080/user?id=1</code> 。我们使用该 url 带上参数 id 来测试一下如下代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/user"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testRequestParam</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"获取到的id为："</span> <span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以正常从控制台打印出 id 信息。同样地，url 上面的参数和方法的参数需要一致，如果不一致，也需要使用 value 属性来说明，比如 url 为：<code>http://localhost:8080/user?idd=1</code></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/user"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testRequestParam</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"idd"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"获取到的id为："</span> <span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>除了 value 属性外，还有个两个属性比较常用：</p><ul><li>required 属性：true 表示该参数必须要传，否则就会报 404 错误，false 表示可有可无。</li><li>defaultValue 属性：默认值，表示如果请求中没有同名参数时的默认值。</li></ul><p>从 url 中可以看出，<code>@RequestParam</code> 注解用于 GET 请求上时，接收拼接在 url 中的参数。除此之外，该注解还可以用于 POST 请求，接收前端表单提交的参数，假如前端通过表单提交 username 和 password 两个参数，那我们可以使用 <code>@RequestParam</code> 来接收，用法和上面一样。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/form1"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testForm</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"获取到的username为："</span> <span class="token operator">+</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"获取到的password为："</span> <span class="token operator">+</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们使用 postman 来模拟一下表单提交，测试一下接口：<img src="https://img-blog.csdnimg.cn/20200215043749282.png" alt="使用postman测试表单提交"></p><p>那么问题来了，如果表单数据很多，我们不可能在后台方法中写上很多参数，每个参数还要 <code>@RequestParam</code> 注解。针对这种情况，我们需要封装一个实体类来接收这些参数，实体中的属性名和表单中的参数名一致即可。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span><span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span><span class="token comment">// set get</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用实体接收的话，我们不能在前面加 <code>@RequestParam</code> 注解了，直接使用即可。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/form2"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testForm</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"获取到的username为："</span> <span class="token operator">+</span> user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"获取到的password为："</span> <span class="token operator">+</span> user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用 postman 再次测试一下表单提交，观察一下返回值和控制台打印出的日志即可。在实际项目中，一般都是封装一个实体类来接收表单数据，因为实际项目中表单数据一般都很多。</p><h2 id="5-RequestBody"><a href="#5-RequestBody" class="headerlink" title="5. @RequestBody"></a>5. @RequestBody</h2><p><code>@RequestBody</code> 注解用于<strong>接收前端传来的实体</strong>，接收参数也是对应的实体，比如<strong>前端</strong>通过 json 提交<strong>传来</strong>两个参数 <strong>username</strong> 和 <strong>password</strong>，此时我们需要在后端封装一个实体来接收。在传递的参数比较多的情况下，使用 <code>**@RequestBody</code> 接收**会非常方便。例如：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span><span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span><span class="token comment">// set get</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/user"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testRequestBody</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">User</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"获取到的username为："</span> <span class="token operator">+</span> user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"获取到的password为："</span> <span class="token operator">+</span> user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们使用 postman 工具来测试一下效果，打开 postman，然后输入请求地址和参数，参数我们用 json 来模拟，如下图所有，调用之后返回 success。<img src="https://img-blog.csdnimg.cn/20200215043853532.png" alt="使用Postman测试requestBody"></p><p>同时看一下后台控制台输出的日志：</p><p>获取到的username为：倪升武 获取到的password为：123456</p><p>可以看出，<code>@RequestBody</code> 注解用于 POST 请求上，接收 json 实体参数。它和上面我们介绍的表单提交有点类似，只不过参数的格式不同，一个是 json 实体，一个是表单提交。在实际项目中根据具体场景和需要使用对应的注解即可。</p><h2 id="6-总结"><a href="#6-总结" class="headerlink" title="6. 总结"></a>6. 总结</h2><p>本节课主要讲解了 Spring Boot 中对 MVC 的支持，分析了 <code>@RestController</code>、 <code>@RequestMapping</code>、<code>@PathVariable</code>、 <code>@RequestParam</code> 和 <code>@RequestBody</code> 四个注解的使用方式，由于 <code>@RestController</code> 中集成了 <code>@ResponseBody</code> 所以对返回 json 的注解不再赘述。以上四个注解是使用频率很高的注解，在所有的实际项目中基本都会遇到，要熟练掌握。</p><h1 id="第06课：Spring-Boot集成-Swagger2-展现在线接口文档"><a href="#第06课：Spring-Boot集成-Swagger2-展现在线接口文档" class="headerlink" title="第06课：Spring Boot集成 Swagger2 展现在线接口文档"></a>第06课：Spring Boot集成 Swagger2 展现在线接口文档</h1><h2 id="1-Swagger-简介"><a href="#1-Swagger-简介" class="headerlink" title="1. Swagger 简介"></a>1. <a href="https://so.csdn.net/so/search?q=Swagger&amp;spm=1001.2101.3001.7020">Swagger</a> 简介</h2><h3 id="1-1-解决的问题"><a href="#1-1-解决的问题" class="headerlink" title="1.1 解决的问题"></a>1.1 解决的问题</h3><p>随着互联网技术的发展，现在的网站架构基本都由原来的后端渲染，变成了前后端分离的形态，而且前端技术和后端技术在各自的道路上越走越远。前端和后端的唯一联系，变成了 API 接口，所以 API 文档变成了前后端开发人员联系的纽带，变得越来越重要。</p><p>那么问题来了，随着代码的不断更新，开发人员在开发新的接口或者更新旧的接口后，由于开发任务的繁重，往往文档很难持续跟着更新，Swagger 就是用来解决该问题的一款重要的工具，对使用接口的人来说，开发人员不需要给他们提供文档，只要告诉他们一个 Swagger 地址，即可展示在线的 API 接口文档，除此之外，调用接口的人员还可以在线测试接口数据，同样地，开发人员在开发接口时，同样也可以利用 Swagger 在线接口文档测试接口数据，这给开发人员提供了便利。</p><h3 id="1-2-Swagger-官方"><a href="#1-2-Swagger-官方" class="headerlink" title="1.2 Swagger 官方"></a>1.2 Swagger 官方</h3><p>我们打开 <a href="https://swagger.io/">Swagger 官网</a>，官方对 Swagger 的定义为：</p><p>The Best APIs are Built with Swagger Tools</p><p>翻译成中文是：“最好的 API 是使用 Swagger 工具构建的”。由此可见，Swagger 官方对其功能和所处的地位非常自信，由于其非常好用，所以官方对其定位也合情合理。如下图所示：<img src="https://img-blog.csdnimg.cn/20200215043936444.png" alt="官方对swagger的定位"></p><p>本文主要讲解在 Spring Boot 中如何导入 Swagger2 工具来展现项目中的接口文档。本节课使用的 Swagger 版本为 2.2.2。下面开始进入 Swagger2 之旅。</p><h2 id="2-Swagger2-的-maven-依赖"><a href="#2-Swagger2-的-maven-依赖" class="headerlink" title="2. Swagger2 的 maven 依赖"></a>2. Swagger2 的 maven 依赖</h2><p>使用 Swagger2 工具，必须要导入 maven 依赖，当前官方最高版本是 2.8.0，我尝试了一下，个人感觉页面展示的效果不太好，而且不够紧凑，不利于操作。另外，最新版本并不一定是最稳定版本，当前我们实际项目中使用的是 2.2.2 版本，该版本稳定，界面友好，所以本节课主要围绕着 2.2.2 版本来展开，依赖如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span><span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>io<span class="token punctuation">.</span>springfox<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>springfox<span class="token operator">-</span>swagger2<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">2.2</span><span class="token number">.2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span><span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>io<span class="token punctuation">.</span>springfox<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>springfox<span class="token operator">-</span>swagger<span class="token operator">-</span>ui<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">2.2</span><span class="token number">.2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-Swagger2-的配置"><a href="#3-Swagger2-的配置" class="headerlink" title="3. Swagger2 的配置"></a>3. Swagger2 的配置</h2><p>使用 Swagger2 需要进行配置，Spring Boot 中对 Swagger2 的配置非常方便，新建一个配置类，Swagger2 的配置类上除了添加必要的 <code>@Configuration</code> 注解外，还需要添加 <code>@EnableSwagger2</code> 注解。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>builders<span class="token punctuation">.</span></span><span class="token class-name">ApiInfoBuilder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>builders<span class="token punctuation">.</span></span><span class="token class-name">PathSelectors</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>builders<span class="token punctuation">.</span></span><span class="token class-name">RequestHandlerSelectors</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">ApiInfo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>spi<span class="token punctuation">.</span></span><span class="token class-name">DocumentationType</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>web<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span></span><span class="token class-name">Docket</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>swagger2<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">EnableSwagger2</span><span class="token punctuation">;</span><span class="token comment">/** * @author shengwu ni */</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableSwagger2</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SwaggerConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">Docket</span> <span class="token function">createRestApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span><span class="token class-name">DocumentationType</span><span class="token punctuation">.</span>SWAGGER_2<span class="token punctuation">)</span>                <span class="token comment">// 指定构建api文档的详细信息的方法：apiInfo()</span>                <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment">// 指定要生成api接口的包路径，这里把controller作为包路径，生成controller中的所有接口</span>                <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span><span class="token class-name">RequestHandlerSelectors</span><span class="token punctuation">.</span><span class="token function">basePackage</span><span class="token punctuation">(</span><span class="token string">"com.itcodai.course06.controller"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span><span class="token class-name">PathSelectors</span><span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 构建api文档的详细信息     * @return     */</span>    <span class="token keyword">private</span> <span class="token class-name">ApiInfo</span> <span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ApiInfoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment">// 设置页面标题</span>                <span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">"Spring Boot集成Swagger2接口总览"</span><span class="token punctuation">)</span>                <span class="token comment">// 设置接口描述</span>                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">"跟武哥一起学Spring Boot第06课"</span><span class="token punctuation">)</span>                <span class="token comment">// 设置联系方式</span>                <span class="token punctuation">.</span><span class="token function">contact</span><span class="token punctuation">(</span><span class="token string">"倪升武，"</span> <span class="token operator">+</span> <span class="token string">"CSDN：http://blog.csdn.net/eson_15"</span><span class="token punctuation">)</span>                <span class="token comment">// 设置版本</span>                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">"1.0"</span><span class="token punctuation">)</span>                <span class="token comment">// 构建</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在该配置类中，已经使用注释详细解释了每个方法的作用了，在此不再赘述。到此为止，我们已经配置好了 Swagger2 了。现在我们可以测试一下配置有没有生效，启动项目，在浏览器中输入 <code>localhost:8080/swagger-ui.html</code>，即可看到 swagger2 的接口页面，如下图所示，说明Swagger2 集成成功。<img src="https://img-blog.csdnimg.cn/20200215044013383.png" alt="swagger2页面">结合该图，对照上面的 Swagger2 配置文件中的配置，可以很明确的知道配置类中每个方法的作用。这样就很容易理解和掌握 Swagger2 中的配置了，也可以看出，其实 Swagger2 配置很简单。</p><p>【友情提示】可能有很多朋友在配置 Swagger 的时候会遇到下面的情况，而且还关不掉的，这是因为浏览器缓存引起的，清空一下浏览器缓存即可解决问题。</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-gBvZvwz7-1595163751524)(<a href="http://p99jlm9k5.bkt.clouddn.com/blog/images/1/error.png)]">http://p99jlm9k5.bkt.clouddn.com/blog/images/1/error.png)]</a></p><h2 id="4-Swagger2-的使用"><a href="#4-Swagger2-的使用" class="headerlink" title="4. Swagger2 的使用"></a>4. Swagger2 的使用</h2><p>上面我们已经配置好了 Swagger2，并且也启动测试了一下，功能正常，下面我们开始使用 Swagger2，主要来介绍 Swagger2 中的几个常用的注解，分别在实体类上、 Controller 类上以及 Controller 中的方法上，最后我们看一下 Swagger2 是如何在页面上呈现在线接口文档的，并且结合 Controller 中的方法在接口中测试一下数据。</p><h3 id="4-1-实体类注解"><a href="#4-1-实体类注解" class="headerlink" title="4.1 实体类注解"></a>4.1 实体类注解</h3><p>本节我们建一个 User 实体类，主要介绍一下 Swagger2 中的 <code>@ApiModel</code> 和 <code>@ApiModelProperty</code> 注解，同时为后面的测试做准备。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">ApiModel</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">ApiModelProperty</span><span class="token punctuation">;</span><span class="token annotation punctuation">@ApiModel</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"用户实体类"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"用户唯一标识"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"用户姓名"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"用户密码"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span><span class="token comment">// 省略set和get方法</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>解释下 <code>@ApiModel</code> 和 <code>@ApiModelProperty</code> 注解：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@ApiModel</span> 注解用于实体类，表示对类进行说明，用于参数用实体类接收。<span class="token annotation punctuation">@ApiModelProperty</span> 注解用于类中属性，表示对 model 属性的说明或者数据操作更改。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>该注解在在线 API 文档中的具体效果在下文说明。</p><h3 id="4-2-Controller-类中相关注解"><a href="#4-2-Controller-类中相关注解" class="headerlink" title="4.2 Controller 类中相关注解"></a>4.2 Controller 类中相关注解</h3><p>我们写一个 TestController，再写几个接口，然后学习一下 Controller 中和 Swagger2 相关的注解。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itcodai<span class="token punctuation">.</span>course06<span class="token punctuation">.</span>entiy<span class="token punctuation">.</span></span><span class="token class-name">JsonResult</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>itcodai<span class="token punctuation">.</span>course06<span class="token punctuation">.</span>entiy<span class="token punctuation">.</span></span><span class="token class-name">User</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">Api</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">ApiOperation</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">ApiParam</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PathVariable</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/swagger"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"Swagger2 在线接口文档"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/get/{id}"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"根据用户唯一标识获取用户信息"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">JsonResult</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token annotation punctuation">@ApiParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"用户唯一标识"</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 模拟数据库中根据id获取User信息</span>        <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> <span class="token string">"倪升武"</span><span class="token punctuation">,</span> <span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JsonResult</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们来学习一下 <code>@Api</code> 、 <code>@ApiOperation</code> 和 <code>@ApiParam</code> 注解。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Api</span> 注解用于类上，表示标识这个类是 swagger 的资源。<span class="token annotation punctuation">@ApiOperation</span> 注解用于方法，表示一个 http 请求的操作。<span class="token annotation punctuation">@ApiParam</span> 注解用于参数上，用来标明参数信息。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这里返回的是 JsonResult，是第02课中学习返回 json 数据时封装的实体。以上是 Swagger 中最常用的 5 个注解，接下来运行一下项目工程，在浏览器中输入 <code>localhost:8080/swagger-ui.html</code> 看一下 Swagger 页面的接口状态。<img src="https://img-blog.csdnimg.cn/20200215044156305.png" alt="swagger接口展示"></p><p>可以看出，Swagger 页面对该接口的信息展示的非常全面，每个注解的作用以及展示的地方在上图中已经标明，通过页面即可知道该接口的所有信息，那么我们直接在线测试一下该接口返回的信息，输入id为1，看一下返回数据：可以看出，Swagger 页面对该接口的信息展示的非常全面，每个注解的作用以及展示的地方在上图中已经标明，通过页面即可知道该接口的所有信息，那么我们直接在线测试一下该接口返回的信息，输入id为1，看一下返回数据：<img src="https://img-blog.csdnimg.cn/20200215044226292.png" alt="返回数据测试"></p><p>可以看出，直接在页面返回了 json 格式的数据，开发人员可以直接使用该在线接口来测试数据的正确与否，非常方便。上面是对于单个参数的输入，如果输入参数为某个对象这种情况，Swagger 是什么样子呢？我们再写一个接口。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/insert"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"添加用户信息"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">JsonResult</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">insertUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token annotation punctuation">@ApiParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"用户信息"</span><span class="token punctuation">)</span> <span class="token class-name">User</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 处理添加逻辑</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JsonResult</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重启项目，在浏览器中输入 <code>localhost:8080/swagger-ui.html</code> 看一下效果：<img src="https://img-blog.csdnimg.cn/20200215044256579.png" alt="swagger接口展示"></p><h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h2><p>OK，本节课详细分析了 Swagger 的优点，以及 Spring Boot 如何集成 Swagger2，包括配置，相关注解的讲解，涉及到了实体类和接口类，以及如何使用。最后通过页面测试，体验了 Swagger 的强大之处，基本上是每个项目组中必备的工具之一，所以要掌握该工具的使用，也不难。</p><h1 id="第七课-Springboot集成Mybatis"><a href="#第七课-Springboot集成Mybatis" class="headerlink" title="第七课  Springboot集成Mybatis"></a>第七课  Springboot集成Mybatis</h1><h2 id="一-导入mybatis的依赖包"><a href="#一-导入mybatis的依赖包" class="headerlink" title="一.导入mybatis的依赖包"></a>一.导入mybatis的依赖包</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>mybatis<span class="token operator">-</span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">2.1</span><span class="token number">.1</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token generics"><span class="token punctuation">&lt;</span>resources<span class="token punctuation">&gt;</span></span>    <span class="token generics"><span class="token punctuation">&lt;</span>resource<span class="token punctuation">&gt;</span></span>        <span class="token generics"><span class="token punctuation">&lt;</span>directory<span class="token punctuation">&gt;</span></span>src<span class="token operator">/</span>main<span class="token operator">/</span>java<span class="token operator">&lt;</span><span class="token operator">/</span>directory<span class="token operator">&gt;</span>        <span class="token generics"><span class="token punctuation">&lt;</span>includes<span class="token punctuation">&gt;</span></span>            <span class="token generics"><span class="token punctuation">&lt;</span>include<span class="token punctuation">&gt;</span></span><span class="token operator">*</span><span class="token operator">*</span><span class="token comment">/*.xml&lt;/include&gt;        &lt;/includes&gt;        &lt;filtering&gt;true&lt;/filtering&gt;    &lt;/resource&gt;&lt;/resources&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二-在application-yml"><a href="#二-在application-yml" class="headerlink" title="二.在application.yml"></a>二.在application.yml</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java">spring<span class="token operator">:</span>  datasource<span class="token operator">:</span>    username<span class="token operator">:</span> root    password<span class="token operator">:</span> root1234    #<span class="token operator">?</span>serverTimezone<span class="token operator">=</span>UTC解决时区的报错    url<span class="token operator">:</span> jdbc<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">3306</span><span class="token operator">/</span>commdity<span class="token operator">?</span>serverTimezone<span class="token operator">=</span>UTC<span class="token operator">&amp;</span>useUnicode<span class="token operator">=</span><span class="token boolean">true</span><span class="token operator">&amp;</span>characterEncoding<span class="token operator">=</span>utf<span class="token operator">-</span><span class="token number">8</span>    driver<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">-</span>name<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>cj<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>Driver</span>#主要mybatis<span class="token operator">:</span>  type<span class="token operator">-</span>aliases<span class="token operator">-</span><span class="token keyword">package</span><span class="token operator">:</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>pojo  mapper<span class="token operator">-</span>locations<span class="token operator">:</span> classpath<span class="token operator">:</span>mapper<span class="token comment">/*.xml</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>新建一个User 实体类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>pojo</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">,</span> <span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> username<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> password<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">Long</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> username<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> username<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> password<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> password<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"User{"</span> <span class="token operator">+</span>                <span class="token string">"id="</span> <span class="token operator">+</span> id <span class="token operator">+</span>                <span class="token string">", username='"</span> <span class="token operator">+</span> username <span class="token operator">+</span> <span class="token char">'\''</span> <span class="token operator">+</span>                <span class="token string">", password='"</span> <span class="token operator">+</span> password <span class="token operator">+</span> <span class="token char">'\''</span> <span class="token operator">+</span>                <span class="token char">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>新建一个 User接口UserMapper</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>mapper</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">User</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">Mapper</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Repository</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Mapper</span><span class="token annotation punctuation">@Repository</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span> <span class="token punctuation">{</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">addUser</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">User</span> <span class="token function">queryUserById</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">updateUser</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">deleteUser</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三-编写UserMapper-xml"><a href="#三-编写UserMapper-xml" class="headerlink" title="三.编写UserMapper.xml"></a>三.编写UserMapper.xml</h2><p> <strong>这里面的id,username,password 要跟你的User实体类对上</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">?</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE mapper PUBLIC <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>  这个包要写对 对应<span class="token class-name">User</span>  <span class="token operator">--</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>mapper namespace<span class="token operator">=</span><span class="token string">"com.example.mapper.UserMapper"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">"queryUserList"</span> resultType<span class="token operator">=</span><span class="token string">"User"</span><span class="token operator">&gt;</span>        select <span class="token operator">*</span> from user2<span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>    这里面的id<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password 要跟你的<span class="token class-name">User</span>实体类对上<span class="token operator">--</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>insert id<span class="token operator">=</span><span class="token string">"addUser"</span> parameterType<span class="token operator">=</span><span class="token string">"User"</span><span class="token operator">&gt;</span>        insert into <span class="token function">user2</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span> values <span class="token punctuation">(</span>#<span class="token punctuation">{</span>id<span class="token punctuation">}</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>username<span class="token punctuation">}</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>password<span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>insert<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">"queryUserById"</span> resultType<span class="token operator">=</span><span class="token string">"User"</span><span class="token operator">&gt;</span>        select <span class="token operator">*</span> from user2 where id <span class="token operator">=</span> #<span class="token punctuation">{</span>id<span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>update id<span class="token operator">=</span><span class="token string">"updateUser"</span> parameterType<span class="token operator">=</span><span class="token string">"User"</span><span class="token operator">&gt;</span>        update user2 set username<span class="token operator">=</span>#<span class="token punctuation">{</span>username<span class="token punctuation">}</span><span class="token punctuation">,</span>password<span class="token operator">=</span>#<span class="token punctuation">{</span>password<span class="token punctuation">}</span> where id<span class="token operator">=</span>#<span class="token punctuation">{</span>id<span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>update<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>delete id<span class="token operator">=</span><span class="token string">"deleteUser"</span> parameterType<span class="token operator">=</span><span class="token string">"int"</span><span class="token operator">&gt;</span>        delete from user2 where id<span class="token operator">=</span>#<span class="token punctuation">{</span>id<span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>delete<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>mapper<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编写UserController</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span></span><span class="token class-name">UserMapper</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">User</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">UserMapper</span> userMapper<span class="token punctuation">;</span>    <span class="token comment">//1.查找所有的用户信息</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/queryUserList"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> userList <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">queryUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">User</span> user <span class="token operator">:</span> userList<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> userList<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//2.增加用户信息</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/addUser"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">addUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        userMapper<span class="token punctuation">.</span><span class="token function">addUser</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token number">3L</span><span class="token punctuation">,</span><span class="token string">"bb"</span><span class="token punctuation">,</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"ok"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token comment">//    3.更新用户信息</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span><span class="token string">"/updateUser"</span> <span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">updateUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        userMapper<span class="token punctuation">.</span><span class="token function">updateUser</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token number">2L</span><span class="token punctuation">,</span><span class="token string">"cc"</span><span class="token punctuation">,</span><span class="token string">"22"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"ok"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token comment">//   4. 删除用户信息</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span><span class="token string">"/deleteUser"</span> <span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">deleteUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        userMapper<span class="token punctuation">.</span><span class="token function">deleteUser</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"ok"</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token comment">//    5.根据id查找用户信息</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span><span class="token string">"/queryUserById"</span> <span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">queryUserById</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">User</span> user <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">queryUserById</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> user<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Navicat破解</title>
      <link href="/2022/03/28/Navicat%E7%A0%B4%E8%A7%A3/"/>
      <url>/2022/03/28/Navicat%E7%A0%B4%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Navicat15破解"><a href="#Navicat15破解" class="headerlink" title="Navicat15破解"></a>Navicat15破解</h1><p>1.下载Navicat15链接如下</p><p>链接：<a href="https://pan.baidu.com/s/1v8g2diSDsvOAn5cXEQ-IkA?pwd=o2td">https://pan.baidu.com/s/1v8g2diSDsvOAn5cXEQ-IkA?pwd=o2td</a><br>提取码：o2td</p><p>2.下载Navicat15破解包链接如下</p><p><a href="https://pan.baidu.com/s/1BERb1_QOY0ykt_WiHJhwnw?pwd=y96o">https://pan.baidu.com/s/1BERb1_QOY0ykt_WiHJhwnw?pwd=y96o</a><br>提取码：y96o</p><p>3.下载并安装好Navicat15之后 在D： </p><p>！！切记先不要打开 ！！切记先不要打开 ！！切记先不要打开</p><p>4.把破解包解压 之后打开 PatchNavicat.exe 文件 放着别动</p><p>5.打开Navicat15 app  文件所在目录（把文件路径ctrl c复制）到我们刚刚第四步的窗口目录 粘贴+回车</p><p>6.弹出一个success 安装成功，撒花结束。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SpringMvc</title>
      <link href="/2022/03/27/SpringMvc-0/"/>
      <url>/2022/03/27/SpringMvc-0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SpringMVC"><a href="#SpringMVC" class="headerlink" title="SpringMVC"></a>SpringMVC</h1><h2 id="1、回顾MVC"><a href="#1、回顾MVC" class="headerlink" title="1、回顾MVC"></a>1、回顾MVC</h2><p>1.1、什么是MVC</p><p>MVC是模型(Model)、视图(View)、控制器(Controller)的简写，是一种软件设计规范。<br>是将业务逻辑、数据、显示分离的方法来组织代码。<br>MVC主要作用是降低了视图与业务逻辑间的双向偶合。<br>MVC不是一种设计模式，MVC是一种架构模式。当然不同的MVC存在差异。<br><strong>Model（模型）：</strong>数据模型，提供要展示的数据，因此包含数据和行为，可以认为是领域模型或JavaBean组件（包含数据和行为），不过现在一般都分离开来：Value Object（数据Dao） 和 服务层（行为Service）。也就是模型提供了模型数据查询和模型数据的状态更新等功能，包括数据和业务。</p><p><strong>View（视图）：</strong>负责进行模型的展示，一般就是我们见到的用户界面，客户想看到的东西。</p><p><strong>Controller（控制器）：</strong>接收用户请求，委托给模型进行处理（状态改变），处理完毕后把返回的模型数据返回给视图，由视图负责展示。也就是说控制器做了个调度员的工作。</p><p>最典型的MVC就是JSP + servlet + javabean的模式。[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-RvIA8L7I-1613122851049)(SpringMVC课堂笔记.assets/640.png)]</p><h2 id="1-2、Model1时代"><a href="#1-2、Model1时代" class="headerlink" title="1.2、Model1时代"></a>1.2、Model1时代</h2><p>在web早期的开发中，通常采用的都是Model1。<br>Model1中，主要分为两层，视图层和模型层。<br>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-iqOBGDEs-1613122851051)(SpringMVC课堂笔记.assets/641.png)]</p><p>Model1优点：架构简单，比较适合小型项目开发；</p><p>Model1缺点：JSP职责不单一，职责过重，不便于维护；</p><h2 id="1-3、Model2时代"><a href="#1-3、Model2时代" class="headerlink" title="1.3、Model2时代"></a>1.3、Model2时代</h2><p>Model2把一个项目分成三部分，包括视图、控制、模型。</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-rdEwr6nt-1613122851052)(SpringMVC课堂笔记.assets/642.webp)]</p><p>用户发请求<br>Servlet接收请求数据，并调用对应的业务逻辑方法<br>业务处理完毕，返回更新后的数据给servlet<br>servlet转向到JSP，由JSP来渲染页面<br>响应给前端更新后的页面<br>职责分析：</p><p>Controller：控制器</p><p>取得表单数据<br>调用业务逻辑<br>转向指定的页面<br>Model：模型</p><p>业务逻辑<br>保存数据的状态<br>View：视图</p><p>显示页面<br>Model2这样不仅提高的代码的复用率与项目的扩展性，且大大降低了项目的维护成本。Model 1模式的实现比较简单，适用于快速开发小规模项目，Model1中JSP页面身兼View和Controller两种角色，将控制逻辑和表现逻辑混杂在一起，从而导致代码的重用性非常低，增加了应用的扩展性和维护的难度。Model2消除了Model1的缺点。</p><h2 id="1-4、回顾Servlet"><a href="#1-4、回顾Servlet" class="headerlink" title="1.4、回顾Servlet"></a>1.4、回顾Servlet</h2><p>新建一个Maven工程当做父工程！pom依赖！</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token generics"><span class="token punctuation">&lt;</span>dependencies<span class="token punctuation">&gt;</span></span>   <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>       <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>junit<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>       <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>junit<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>       <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">4.12</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>   <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>       <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>       <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>webmvc<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>       <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">5.1</span><span class="token number">.9</span><span class="token punctuation">.</span>RELEASE<span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>   <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>       <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>javax<span class="token punctuation">.</span>servlet<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>       <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>servlet<span class="token operator">-</span>api<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>       <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">2.5</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>   <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>       <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>jsp<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>       <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>jsp<span class="token operator">-</span>api<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>       <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">2.2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>   <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>       <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>javax<span class="token punctuation">.</span>servlet<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>       <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>jstl<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>       <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">1.2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>dependencies<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>建立一个Moudle：springmvc-01-servlet ， 添加Web app的支持！</p><p>导入servlet 和 jsp 的 jar 依赖</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>   <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>javax<span class="token punctuation">.</span>servlet<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>   <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>servlet<span class="token operator">-</span>api<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>   <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">2.5</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>   <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>jsp<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>   <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>jsp<span class="token operator">-</span>api<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>   <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">2.2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编写一个Servlet类，用来处理用户的请求</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">nuc<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>servlet</span><span class="token punctuation">;</span><span class="token comment">//实现Servlet接口</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>   <span class="token annotation punctuation">@Override</span>   <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>       <span class="token comment">//取得参数</span>       <span class="token class-name">String</span> method <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"method"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"add"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>           req<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span><span class="token string">"执行了add方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"delete"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>           req<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span><span class="token string">"执行了delete方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>       <span class="token comment">//业务逻辑</span>       <span class="token comment">//视图跳转</span>       req<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">"/WEB-INF/jsp/hello.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span>resp<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>   <span class="token annotation punctuation">@Override</span>   <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>       <span class="token function">doGet</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span>resp<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编写Hello.jsp，在WEB-INF目录下新建一个jsp的文件夹，新建hello.jsp</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">%</span>@ page contentType<span class="token operator">=</span><span class="token string">"text/html;charset=UTF-8"</span> language<span class="token operator">=</span><span class="token string">"java"</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>html<span class="token punctuation">&gt;</span></span><span class="token generics"><span class="token punctuation">&lt;</span>head<span class="token punctuation">&gt;</span></span>   <span class="token generics"><span class="token punctuation">&lt;</span>title<span class="token punctuation">&gt;</span></span><span class="token class-name">Kuangshen</span><span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>body<span class="token punctuation">&gt;</span></span>$<span class="token punctuation">{</span>msg<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在web.xml中注册Servlet</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">?</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>web<span class="token operator">-</span>app xmlns<span class="token operator">=</span><span class="token string">"http://xmlns.jcp.org/xml/ns/javaee"</span>        xmlns<span class="token operator">:</span>xsi<span class="token operator">=</span><span class="token string">"http://www.w3.org/2001/XMLSchema-instance"</span>        xsi<span class="token operator">:</span>schemaLocation<span class="token operator">=</span><span class="token string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"</span>        version<span class="token operator">=</span><span class="token string">"4.0"</span><span class="token operator">&gt;</span>   <span class="token generics"><span class="token punctuation">&lt;</span>servlet<span class="token punctuation">&gt;</span></span>       <span class="token operator">&lt;</span>servlet<span class="token operator">-</span>name<span class="token operator">&gt;</span><span class="token class-name">HelloServlet</span><span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span>name<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>servlet<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">&gt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>kuang<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>HelloServlet</span><span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span>servlet<span class="token operator">-</span>mapping<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>servlet<span class="token operator">-</span>name<span class="token operator">&gt;</span><span class="token class-name">HelloServlet</span><span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span>name<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>url<span class="token operator">-</span>pattern<span class="token operator">&gt;</span><span class="token operator">/</span>user<span class="token operator">&lt;</span><span class="token operator">/</span>url<span class="token operator">-</span>pattern<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span>mapping<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>web<span class="token operator">-</span>app<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置Tomcat，并启动测试</p><p>localhost:8080/user?method=add<br>localhost:8080/user?method=delete<br>MVC框架要做哪些事情</p><p>将url映射到java类或java类的方法 .<br>封装用户提交的数据 .<br>处理请求–调用相关的业务处理–封装响应数据 .<br>将响应的数据进行渲染 . jsp / html 等表示层数据 .<br>说明：</p><p> 常见的服务器端MVC框架有：Struts、Spring MVC、ASP.NET MVC、Zend Framework、JSF；常见前端MVC框架：vue、angularjs、react、backbone；由MVC演化出了另外一些模式如：MVP、MVVM 等等…</p><h1 id="2、什么是SpringMVC"><a href="#2、什么是SpringMVC" class="headerlink" title="2、什么是SpringMVC"></a>2、什么是SpringMVC</h1><h2 id="2-1、概述"><a href="#2-1、概述" class="headerlink" title="2.1、概述"></a>2.1、概述</h2><p><img src="https://img-blog.csdnimg.cn/20210212174323582.png#pic_center" alt="在这里插入图片描述"></p><p>Spring MVC是Spring Framework的一部分，是基于Java实现MVC的轻量级Web框架。</p><p>查看官方文档：<a href="https://docs.spring.io/spring/docs/5.2.0.RELEASE/spring-framework-reference/web.html#spring-web">https://docs.spring.io/spring/docs/5.2.0.RELEASE/spring-framework-reference/web.html#spring-web</a></p><p>我们为什么要学习SpringMVC呢?</p><p>Spring MVC的特点：</p><p>轻量级，简单易学<br>高效 , 基于请求响应的MVC框架<br>与Spring兼容性好，无缝结合<br>约定优于配置<br>功能强大：RESTful、数据验证、格式化、本地化、主题等<br>简洁灵活<br>Spring的web框架围绕DispatcherServlet [ 调度Servlet ] 设计。</p><p>DispatcherServlet的作用是将请求分发到不同的处理器。从Spring 2.5开始，使用Java 5或者以上版本的用户可以采用基于注解形式进行开发，十分简洁；</p><p>正因为SpringMVC好 , 简单 , 便捷 , 易学 , 天生和Spring无缝集成(使用SpringIoC和Aop) , 使用约定优于配置 . 能够进行简单的junit测试 . 支持Restful风格 .异常处理 , 本地化 , 国际化 , 数据验证 , 类型转换 , 拦截器 等等…所以我们要学习 .</p><p>最重要的一点还是用的人多 , 使用的公司多 .</p><h2 id="2-2、中心控制器"><a href="#2-2、中心控制器" class="headerlink" title="2.2、中心控制器"></a>2.2、中心控制器</h2><p>Spring的web框架围绕DispatcherServlet设计。DispatcherServlet的作用是将请求分发到不同的处理器。从Spring 2.5开始，使用Java 5或者以上版本的用户可以采用基于注解的controller声明方式。</p><p><img src="https://img-blog.csdnimg.cn/2021021217433633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDIwMjg3MQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>Spring MVC框架像许多其他MVC框架一样, 以请求为驱动 , 围绕一个中心Servlet分派请求及提供其他功能，DispatcherServlet是一个实际的Servlet (它继承自HttpServlet 基类)。</p><p>SpringMVC的原理如下图所示：</p><p>当发起请求时被前置的控制器拦截到请求，根据请求参数生成代理请求，找到请求对应的实际控制器，控制器处理请求，创建数据模型，访问数据库，将模型响应给中心控制器，控制器使用模型与视图渲染视图结果，将结果返回给中心控制器，再将结果返回给请求者。</p><p>原图</p><p><img src="https://img-blog.csdnimg.cn/20210212174435482.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDIwMjg3MQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>中文图</p><p><img src="https://img-blog.csdnimg.cn/20210212174451530.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDIwMjg3MQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="2-3、SpringMVC执行原理"><a href="#2-3、SpringMVC执行原理" class="headerlink" title="2.3、SpringMVC执行原理"></a>2.3、SpringMVC执行原理</h2><p><img src="https://img-blog.csdnimg.cn/2021021618311218.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDIwMjg3MQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>图为SpringMVC的一个较完整的流程图，实线表示SpringMVC框架提供的技术，不需要开发者实现，虚线表示需要开发者实现。</p><p>简要分析执行流程</p><p>DispatcherServlet表示前置控制器，是整个SpringMVC的控制中心。用户发出请求，DispatcherServlet接收请求并拦截请求。</p><p>我们假设请求的url为 : <a href="http://localhost:8080/SpringMVC/hello">http://localhost:8080/SpringMVC/hello</a></p><p>如上url拆分成三部分：</p><p><a href="http://localhost:8080/">http://localhost:8080</a> ——&gt; 服务器域名</p><p>SpringMVC ——&gt; 部署在服务器上的web站点</p><p>hello ——&gt; 表示控制器</p><p>通过分析，如上url表示为：请求位于服务器localhost:8080上的SpringMVC站点的hello控制器。</p><p>HandlerMapping为处理器映射。DispatcherServlet调用HandlerMapping,HandlerMapping根据请求url查找Handler。</p><p>HandlerExecution表示具体的Handler,其主要作用是根据url查找控制器，如上url被查找控制器为：hello。</p><p>HandlerExecution将解析后的信息传递给DispatcherServlet,如解析控制器映射等。</p><p>HandlerAdapter表示处理器适配器，其按照特定的规则去执行Handler。</p><p>Handler让具体的Controller执行。</p><p>Controller将具体的执行信息返回给HandlerAdapter,如ModelAndView。</p><p>HandlerAdapter将视图逻辑名或模型传递给DispatcherServlet。</p><p>DispatcherServlet调用视图解析器(ViewResolver)来解析HandlerAdapter传递的逻辑视图名。</p><p>视图解析器将解析的逻辑视图名传给DispatcherServlet。</p><p>DispatcherServlet根据视图解析器解析的视图结果，调用具体的视图。</p><p>最终视图呈现给用户。</p><h1 id="3、第一个MVC程序"><a href="#3、第一个MVC程序" class="headerlink" title="3、第一个MVC程序"></a>3、第一个MVC程序</h1><h2 id="3-1、配置版"><a href="#3-1、配置版" class="headerlink" title="3.1、配置版"></a>3.1、配置版</h2><p>新建一个Moudle ， springmvc-02-hello ， 添加web的支持！</p><p>确定导入了SpringMVC 的依赖！</p><p>配置web.xml ， 注册DispatcherServlet</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">?</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>web<span class="token operator">-</span>app xmlns<span class="token operator">=</span><span class="token string">"http://xmlns.jcp.org/xml/ns/javaee"</span>         xmlns<span class="token operator">:</span>xsi<span class="token operator">=</span><span class="token string">"http://www.w3.org/2001/XMLSchema-instance"</span>         xsi<span class="token operator">:</span>schemaLocation<span class="token operator">=</span><span class="token string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"</span>         version<span class="token operator">=</span><span class="token string">"4.0"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token number">1.</span>注册<span class="token class-name">DispatcherServlet</span><span class="token operator">--</span><span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>servlet<span class="token punctuation">&gt;</span></span>        <span class="token operator">&lt;</span>servlet<span class="token operator">-</span>name<span class="token operator">&gt;</span>springmvc<span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span>name<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>servlet<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">&gt;</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>DispatcherServlet</span><span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>关联一个springmvc的配置文件<span class="token operator">:</span>【servlet<span class="token operator">-</span>name】<span class="token operator">-</span>servlet<span class="token punctuation">.</span>xml<span class="token operator">--</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>init<span class="token operator">-</span>param<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>param<span class="token operator">-</span>name<span class="token operator">&gt;</span>contextConfigLocation<span class="token operator">&lt;</span><span class="token operator">/</span>param<span class="token operator">-</span>name<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>param<span class="token operator">-</span>value<span class="token operator">&gt;</span>classpath<span class="token operator">:</span>springmvc_servlet<span class="token punctuation">.</span>xml<span class="token operator">&lt;</span><span class="token operator">/</span>param<span class="token operator">-</span>value<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>init<span class="token operator">-</span>param<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>启动级别<span class="token operator">-</span><span class="token number">1</span><span class="token operator">--</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>load<span class="token operator">-</span>on<span class="token operator">-</span>startup<span class="token operator">&gt;</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>load<span class="token operator">-</span>on<span class="token operator">-</span>startup<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>servlet<span class="token operator">-</span>mapping<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>servlet<span class="token operator">-</span>name<span class="token operator">&gt;</span>springmvc<span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span>name<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>url<span class="token operator">-</span>pattern<span class="token operator">&gt;</span><span class="token operator">/</span><span class="token operator">&lt;</span><span class="token operator">/</span>url<span class="token operator">-</span>pattern<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span>mapping<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>web<span class="token operator">-</span>app<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编写SpringMVC 的 配置文件！名称：springmvc-servlet.xml : [servletname]-servlet.xml</p><p>说明，这里的名称要求是按照官方来的</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">?</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>beans xmlns<span class="token operator">=</span><span class="token string">"http://www.springframework.org/schema/beans"</span>      xmlns<span class="token operator">:</span>xsi<span class="token operator">=</span><span class="token string">"http://www.w3.org/2001/XMLSchema-instance"</span>      xsi<span class="token operator">:</span>schemaLocation<span class="token operator">=</span>"http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>beans       http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>beans<span class="token operator">/</span>spring<span class="token operator">-</span>beans<span class="token punctuation">.</span>xsd"<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>beans<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>添加 处理映射器（可省略）</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span>bean <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"</span><span class="token operator">/</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>添加 处理器适配器（可省略）</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span>bean <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"</span><span class="token operator">/</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>添加 视图解析器</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>视图解析器<span class="token operator">:</span><span class="token class-name">DispatcherServlet</span>给他的<span class="token class-name">ModelAndView</span><span class="token operator">--</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>bean <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span> id<span class="token operator">=</span><span class="token string">"InternalResourceViewResolver"</span><span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>前缀<span class="token operator">--</span><span class="token operator">&gt;</span>   <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"prefix"</span> value<span class="token operator">=</span><span class="token string">"/WEB-INF/jsp/"</span><span class="token operator">/</span><span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>后缀<span class="token operator">--</span><span class="token operator">&gt;</span>   <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"suffix"</span> value<span class="token operator">=</span><span class="token string">".jsp"</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>bean<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编写我们要操作业务Controller ，要么实现Controller接口，要么增加注解；需要返回一个ModelAndView，装数据，封视图；</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">leyue<span class="token punctuation">.</span>ljp<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ModelAndView</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Controller</span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span></span>Controller</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">handleRequest</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> httpServletRequest<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> httpServletResponse<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">ModelAndView</span> mv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mv<span class="token punctuation">.</span><span class="token function">addObject</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span><span class="token string">"我成功了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mv<span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> mv<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将自己的类交给SpringIOC容器，注册bean</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">%</span>@ page contentType<span class="token operator">=</span><span class="token string">"text/html;charset=UTF-8"</span> language<span class="token operator">=</span><span class="token string">"java"</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>html<span class="token punctuation">&gt;</span></span><span class="token generics"><span class="token punctuation">&lt;</span>head<span class="token punctuation">&gt;</span></span>    <span class="token generics"><span class="token punctuation">&lt;</span>title<span class="token punctuation">&gt;</span></span><span class="token class-name">Title</span><span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>body<span class="token punctuation">&gt;</span></span>$<span class="token punctuation">{</span>msg<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置Tomcat 启动测试！</p><p><img src="C:\Users\23878\AppData\Roaming\Typora\typora-user-images\image-20220119195043274.png" alt="image-20220119195043274"></p><p>可能遇到的问题：访问出现404，排查步骤：</p><p>查看控制台输出，看一下是不是缺少了什么jar包。<br>如果jar包存在，显示无法输出，就在IDEA的项目发布中，添加lib依赖！<br>重启Tomcat 即可解决！<br><strong>小结：我们来看个注解版实现，这才是SpringMVC的精髓。</strong></p><h2 id="3-2、注解版"><a href="#3-2、注解版" class="headerlink" title="3.2、注解版"></a>3.2、注解版</h2><p>新建一个Moudle，springmvc-03-hello-annotation 。添加web支持！</p><p>由于Maven可能存在资源过滤的问题，我们将配置完善</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token generics"><span class="token punctuation">&lt;</span>build<span class="token punctuation">&gt;</span></span>   <span class="token generics"><span class="token punctuation">&lt;</span>resources<span class="token punctuation">&gt;</span></span>       <span class="token generics"><span class="token punctuation">&lt;</span>resource<span class="token punctuation">&gt;</span></span>           <span class="token generics"><span class="token punctuation">&lt;</span>directory<span class="token punctuation">&gt;</span></span>src<span class="token operator">/</span>main<span class="token operator">/</span>java<span class="token operator">&lt;</span><span class="token operator">/</span>directory<span class="token operator">&gt;</span>           <span class="token generics"><span class="token punctuation">&lt;</span>includes<span class="token punctuation">&gt;</span></span>               <span class="token generics"><span class="token punctuation">&lt;</span>include<span class="token punctuation">&gt;</span></span><span class="token operator">*</span><span class="token operator">*</span><span class="token comment">/*.properties&lt;/include&gt;               &lt;include&gt;**/</span><span class="token operator">*</span><span class="token punctuation">.</span>xml<span class="token operator">&lt;</span><span class="token operator">/</span>include<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span><span class="token operator">/</span>includes<span class="token operator">&gt;</span>           <span class="token generics"><span class="token punctuation">&lt;</span>filtering<span class="token punctuation">&gt;</span></span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>filtering<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span><span class="token operator">/</span>resource<span class="token operator">&gt;</span>       <span class="token generics"><span class="token punctuation">&lt;</span>resource<span class="token punctuation">&gt;</span></span>           <span class="token generics"><span class="token punctuation">&lt;</span>directory<span class="token punctuation">&gt;</span></span>src<span class="token operator">/</span>main<span class="token operator">/</span>resources<span class="token operator">&lt;</span><span class="token operator">/</span>directory<span class="token operator">&gt;</span>           <span class="token generics"><span class="token punctuation">&lt;</span>includes<span class="token punctuation">&gt;</span></span>               <span class="token generics"><span class="token punctuation">&lt;</span>include<span class="token punctuation">&gt;</span></span><span class="token operator">*</span><span class="token operator">*</span><span class="token comment">/*.properties&lt;/include&gt;               &lt;include&gt;**/</span><span class="token operator">*</span><span class="token punctuation">.</span>xml<span class="token operator">&lt;</span><span class="token operator">/</span>include<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span><span class="token operator">/</span>includes<span class="token operator">&gt;</span>           <span class="token generics"><span class="token punctuation">&lt;</span>filtering<span class="token punctuation">&gt;</span></span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>filtering<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span><span class="token operator">/</span>resource<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>resources<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>build<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在pom.xml文件引入相关的依赖：主要有Spring框架核心库、Spring MVC、servlet , JSTL等。我们在父依赖中已经引入了！</p><p>配置web.xml</p><p>注意点：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">?</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>web<span class="token operator">-</span>app xmlns<span class="token operator">=</span><span class="token string">"http://xmlns.jcp.org/xml/ns/javaee"</span>        xmlns<span class="token operator">:</span>xsi<span class="token operator">=</span><span class="token string">"http://www.w3.org/2001/XMLSchema-instance"</span>        xsi<span class="token operator">:</span>schemaLocation<span class="token operator">=</span><span class="token string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"</span>        version<span class="token operator">=</span><span class="token string">"4.0"</span><span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token number">1.</span>注册servlet<span class="token operator">--</span><span class="token operator">&gt;</span>   <span class="token generics"><span class="token punctuation">&lt;</span>servlet<span class="token punctuation">&gt;</span></span>       <span class="token operator">&lt;</span>servlet<span class="token operator">-</span>name<span class="token operator">&gt;</span><span class="token class-name">SpringMVC</span><span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span>name<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>servlet<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">&gt;</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>DispatcherServlet</span><span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">&gt;</span>       <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>通过初始化参数指定<span class="token class-name">SpringMVC</span>配置文件的位置，进行关联<span class="token operator">--</span><span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>init<span class="token operator">-</span>param<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>param<span class="token operator">-</span>name<span class="token operator">&gt;</span>contextConfigLocation<span class="token operator">&lt;</span><span class="token operator">/</span>param<span class="token operator">-</span>name<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>param<span class="token operator">-</span>value<span class="token operator">&gt;</span>classpath<span class="token operator">:</span>springmvc<span class="token operator">-</span>servlet<span class="token punctuation">.</span>xml<span class="token operator">&lt;</span><span class="token operator">/</span>param<span class="token operator">-</span>value<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span><span class="token operator">/</span>init<span class="token operator">-</span>param<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 启动顺序，数字越小，启动越早 <span class="token operator">--</span><span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>load<span class="token operator">-</span>on<span class="token operator">-</span>startup<span class="token operator">&gt;</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>load<span class="token operator">-</span>on<span class="token operator">-</span>startup<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>所有请求都会被springmvc拦截 <span class="token operator">--</span><span class="token operator">&gt;</span>   <span class="token operator">&lt;</span>servlet<span class="token operator">-</span>mapping<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>servlet<span class="token operator">-</span>name<span class="token operator">&gt;</span><span class="token class-name">SpringMVC</span><span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span>name<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>url<span class="token operator">-</span>pattern<span class="token operator">&gt;</span><span class="token operator">/</span><span class="token operator">&lt;</span><span class="token operator">/</span>url<span class="token operator">-</span>pattern<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span>mapping<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>web<span class="token operator">-</span>app<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>/ 和 /* 的区别：</p><p>&lt; url-pattern &gt; / &lt;/ url-pattern &gt; 不会匹配到.jsp， 只针对我们编写的请求；即：.jsp 不会进入spring的 DispatcherServlet类 。<br>&lt; url-pattern &gt; /* &lt;/ url-pattern &gt; 会匹配 *.jsp，会出现返回 jsp视图 时再次进入spring的DispatcherServlet 类，导致找不到对应的controller所以报404错。<br>添加Spring MVC配置文件</p><p>在resource目录下添加springmvc-servlet.xml配置文件，配置的形式与Spring容器配置基本类似，为了支持基于注解的IOC，设置了自动扫描包的功能，具体配置信息如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">?</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>beans xmlns<span class="token operator">=</span><span class="token string">"http://www.springframework.org/schema/beans"</span>      xmlns<span class="token operator">:</span>xsi<span class="token operator">=</span><span class="token string">"http://www.w3.org/2001/XMLSchema-instance"</span>      xmlns<span class="token operator">:</span>context<span class="token operator">=</span><span class="token string">"http://www.springframework.org/schema/context"</span>      xmlns<span class="token operator">:</span>mvc<span class="token operator">=</span><span class="token string">"http://www.springframework.org/schema/mvc"</span>      xsi<span class="token operator">:</span>schemaLocation<span class="token operator">=</span>"http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>beans       http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>beans<span class="token operator">/</span>spring<span class="token operator">-</span>beans<span class="token punctuation">.</span>xsd       http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>context       https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>context<span class="token operator">/</span>spring<span class="token operator">-</span>context<span class="token punctuation">.</span>xsd       http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>mvc       https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>mvc<span class="token operator">/</span>spring<span class="token operator">-</span>mvc<span class="token punctuation">.</span>xsd"<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 自动扫描包，让指定包下的注解生效<span class="token punctuation">,</span>由IOC容器统一管理 <span class="token operator">--</span><span class="token operator">&gt;</span>   <span class="token operator">&lt;</span>context<span class="token operator">:</span>component<span class="token operator">-</span>scan base<span class="token operator">-</span><span class="token keyword">package</span><span class="token operator">=</span><span class="token string">"nuc.ss.controller"</span><span class="token operator">/</span><span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 让<span class="token class-name">Spring</span> MVC不处理静态资源 <span class="token operator">--</span><span class="token operator">&gt;</span>   <span class="token operator">&lt;</span>mvc<span class="token operator">:</span><span class="token keyword">default</span><span class="token operator">-</span>servlet<span class="token operator">-</span>handler <span class="token operator">/</span><span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>   支持mvc注解驱动       在spring中一般采用<span class="token annotation punctuation">@RequestMapping</span>注解来完成映射关系       要想使<span class="token annotation punctuation">@RequestMapping</span>注解生效       必须向上下文中注册<span class="token class-name">DefaultAnnotationHandlerMapping</span>       和一个<span class="token class-name">AnnotationMethodHandlerAdapter</span>实例       这两个实例分别在类级别和方法级别处理。       而annotation<span class="token operator">-</span>driven配置帮助我们自动完成上述两个实例的注入。    <span class="token operator">--</span><span class="token operator">&gt;</span>   <span class="token operator">&lt;</span>mvc<span class="token operator">:</span>annotation<span class="token operator">-</span>driven <span class="token operator">/</span><span class="token operator">&gt;</span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 视图解析器 <span class="token operator">--</span><span class="token operator">&gt;</span>   <span class="token operator">&lt;</span>bean <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>         id<span class="token operator">=</span><span class="token string">"internalResourceViewResolver"</span><span class="token operator">&gt;</span>       <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 前缀 <span class="token operator">--</span><span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"prefix"</span> value<span class="token operator">=</span><span class="token string">"/WEB-INF/jsp/"</span> <span class="token operator">/</span><span class="token operator">&gt;</span>       <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 后缀 <span class="token operator">--</span><span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"suffix"</span> value<span class="token operator">=</span><span class="token string">".jsp"</span> <span class="token operator">/</span><span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>bean<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>beans<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>annotation-driven配置帮助我们自动完成上述两个实例的注入。</strong></p><p>  <strong>&lt;mvc:annotation-driven /&gt;忘记添加了 浪费了半小时测试</strong></p><p>在视图解析器中我们把所有的视图都存放在/WEB-INF/目录下，这样可以保证视图安全，因为这个目录下的文件，客户端不能直接访问。</p><p>让IOC的注解生效</p><p>静态资源过滤 ：HTML . JS . CSS . 图片 ， 视频 …</p><p>MVC的注解驱动<br>配置视图解析器<br>创建Controller</p><p>编写一个Java控制类：nuc.ss.controller.HelloController , 注意编码规范</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">nuc<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span><span class="token class-name">Model</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/HelloController"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloController</span> <span class="token punctuation">{</span>   <span class="token comment">//真实访问地址 : 项目名/HelloController/hello</span>   <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/hello"</span><span class="token punctuation">)</span>   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token class-name">Model</span> model<span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token comment">//向模型中添加属性msg与值，可以在JSP页面中取出并渲染</span>       model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span><span class="token string">"hello,SpringMVC"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//web-inf/jsp/hello.jsp</span>       <span class="token keyword">return</span> <span class="token string">"hello"</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>@Controller是为了让Spring IOC容器初始化时自动扫描到；<br>@RequestMapping是为了映射请求路径，这里因为类与方法上都有映射所以访问时应该是/HelloController/hello；<br>方法中声明Model类型的参数是为了把Action中的数据带到视图中；<br>方法返回的结果是视图的名称hello，加上配置文件中的前后缀变成WEB-INF/jsp/hello.jsp<br>创建视图层</p><p>在WEB-INF/ jsp目录中创建hello.jsp ， 视图可以直接取出并展示从Controller带回的信息；</p><p>可以通过EL表示取出Model中存放的值，或者对象；</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">%</span>@ page contentType<span class="token operator">=</span><span class="token string">"text/html;charset=UTF-8"</span> language<span class="token operator">=</span><span class="token string">"java"</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>html<span class="token punctuation">&gt;</span></span><span class="token generics"><span class="token punctuation">&lt;</span>head<span class="token punctuation">&gt;</span></span>   <span class="token generics"><span class="token punctuation">&lt;</span>title<span class="token punctuation">&gt;</span></span><span class="token class-name">SpringMVC</span><span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>body<span class="token punctuation">&gt;</span></span>$<span class="token punctuation">{</span>msg<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置Tomcat运行</p><p>配置Tomcat ， 开启服务器 ， 访问 对应的请求路径！</p><p><img src="C:\Users\23878\AppData\Roaming\Typora\typora-user-images\image-20220119201019151.png" alt="image-20220119201019151"></p><p>OK，运行成功！</p><p>小结<br><strong>实现步骤其实非常的简单：</strong></p><p><strong>新建一个web项目</strong><br><strong>导入相关jar包</strong><br><strong>编写web.xml , 注册DispatcherServlet</strong><br><strong>编写springmvc配置文件</strong><br><strong>接下来就是去创建对应的控制类 , controller</strong><br><strong>最后完善前端视图和controller之间的对应</strong><br><strong>测试运行调试.</strong><br><strong>使用springMVC必须配置的三大件</strong></p><p>处理器映射器、处理器适配器、视图解析器</p><p>通常，我们只需要手动配置视图解析器，而处理器映射器和处理器适配器只需要开启注解驱动即可，而省去了大段的xml配置</p><h1 id="4、RestFul和控制器"><a href="#4、RestFul和控制器" class="headerlink" title="4、RestFul和控制器"></a>4、RestFul和控制器</h1><h3 id="4-1、控制器Controller"><a href="#4-1、控制器Controller" class="headerlink" title="4.1、控制器Controller"></a>4.1、控制器Controller</h3><p>控制器复杂提供访问应用程序的行为，通常通过接口定义或注解定义两种方法实现。</p><p>控制器负责解析用户的请求并将其转换为一个模型。</p><p>在Spring MVC中一个控制器类可以包含多个方法</p><p>在Spring MVC中，对于Controller的配置方式有很多种</p><h3 id="4-2、实现Controller接口"><a href="#4-2、实现Controller接口" class="headerlink" title="4.2、实现Controller接口"></a>4.2、实现Controller接口</h3><p>Controller是一个接口，在org.springframework.web.servlet.mvc包下，接口中只有一个方法；</p><p>//实现该接口的类获得控制器功能</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Controller</span> <span class="token punctuation">{</span>   <span class="token comment">//处理请求且返回一个模型与视图对象</span>   <span class="token class-name">ModelAndView</span> <span class="token function">handleRequest</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> var1<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> var2<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token class-name">Moudle</span>，springmvc<span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span>controller！<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>新建一个Moudle，springmvc-04-controller！</p><p>mvc的配置文件只留下 视图解析器！<br>编写一个Controller类，ControllerTest1</p><p>//定义控制器<br>//注意点：不要导错包，实现Controller接口，重写方法；</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ControllerTest1</span> <span class="token keyword">implements</span> <span class="token class-name">Controller</span> <span class="token punctuation">{</span>   <span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">handleRequest</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> httpServletRequest<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> httpServletResponse<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>       <span class="token comment">//返回一个模型视图对象</span>       <span class="token class-name">ModelAndView</span> mv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       mv<span class="token punctuation">.</span><span class="token function">addObject</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span><span class="token string">"Test1Controller"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       mv<span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">return</span> mv<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编写完毕后，去Spring配置文件中注册请求的bean；name对应请求路径，class对应处理请求的类</p><bean name="/t1" class="nuc.ss.controller.ControllerTest1"><p>编写前端<strong>test.jsp</strong>，注意在WEB-INF/jsp目录下编写，对应我们的视图解析器</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">%</span>@ page contentType<span class="token operator">=</span><span class="token string">"text/html;charset=UTF-8"</span> language<span class="token operator">=</span><span class="token string">"java"</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>html<span class="token punctuation">&gt;</span></span><span class="token generics"><span class="token punctuation">&lt;</span>head<span class="token punctuation">&gt;</span></span>   <span class="token generics"><span class="token punctuation">&lt;</span>title<span class="token punctuation">&gt;</span></span><span class="token class-name">Kuangshen</span><span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>body<span class="token punctuation">&gt;</span></span>$<span class="token punctuation">{</span>msg<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置Tomcat运行测试，我这里没有项目发布名配置的就是一个 / ，所以请求不用加项目名，OK！</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-xn69Bm6v-1613122851061)(SpringMVC课堂笔记.assets/1595128496794.png)]</p><p>说明：</p><p>实现接口Controller定义控制器是较老的办法</p><p>缺点是：一个控制器中只有一个方法，如果要多个方法则需要定义多个Controller；定义的方式比较麻烦；</p><p>使用注解@Controller<br>@Controller注解类型用于声明Spring类的实例是一个控制器（在讲IOC时还提到了另外3个注解）；</p><p>Spring可以使用扫描机制来找到应用程序中所有基于注解的控制器类，为了保证Spring能找到你的控制器，需要在配置文件中声明组件扫描。</p><!-- 自动扫描指定的包，下面所有注解类交给IOC容器管理 --><p>&lt;context:component-scan base-package=”nuc.ss.controller”/&gt;</p><p>增加一个ControllerTest2类，使用注解实现；</p><p>//@Controller注解的类会自动添加到Spring上下文中</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ControllerTest2</span><span class="token punctuation">{</span>   <span class="token comment">//映射访问路径</span>   <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/t2"</span><span class="token punctuation">)</span>   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token class-name">Model</span> model<span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token comment">//Spring MVC会自动实例化一个Model对象用于向视图中传值</span>       model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span> <span class="token string">"ControllerTest2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//返回视图位置</span>       <span class="token keyword">return</span> <span class="token string">"test"</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行tomcat测试</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-E1opAo2b-1613122851062)(SpringMVC课堂笔记.assets/1595128649687.png)]</p><p>可以发现，我们的两个请求都可以指向一个视图(test)，但是页面结果的结果是不一样的，从这里可以看出视图是被复用的，而控制器与视图之间是弱偶合关系。</p><p>注解方式是平时使用的最多的方式！</p><p>RequestMapping<br>@RequestMapping</p><p>@RequestMapping注解用于映射url到控制器类或一个特定的处理程序方法。可用于类或方法上。用于类上，表示类中的所有响应请求的方法都是以该地址作为父路径。</p><p>为了测试结论更加准确，我们可以加上一个项目名测试 myweb</p><p>只注解在方法上面</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">{</span>   <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/h1"</span><span class="token punctuation">)</span>   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token keyword">return</span> <span class="token string">"test"</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>访问路径：<a href="http://localhost:8080/">http://localhost:8080</a> / 项目名 / h1</p><p>同时注解类与方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/admin"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">{</span>   <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/h1"</span><span class="token punctuation">)</span>   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token keyword">return</span> <span class="token string">"test"</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>访问路径：<a href="http://localhost:8080/">http://localhost:8080</a> / 项目名/ admin /h1 , 需要先指定类的路径再指定方法的路径；</p><h1 id="5、整合SSM框架"><a href="#5、整合SSM框架" class="headerlink" title="5、整合SSM框架"></a>5、整合SSM框架</h1><h2 id="1、环境要求"><a href="#1、环境要求" class="headerlink" title="1、环境要求"></a>1、环境要求</h2><p>环境：</p><p>IDEA</p><p>MySQL 5.7.19</p><p>Tomcat 9</p><p>Maven 3.6</p><p>要求：</p><p>需要熟练掌握MySQL数据库，Spring，JavaWeb及MyBatis知识，简单的前端知识；</p><h2 id="2、数据库环境"><a href="#2、数据库环境" class="headerlink" title="2、数据库环境"></a>2、数据库环境</h2><p>创建一个存放书籍数据的数据库表</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">CREATE DATABASE `ssmbuild`<span class="token punctuation">;</span> USE `ssmbuild`<span class="token punctuation">;</span> DROP TABLE IF EXISTS `books`<span class="token punctuation">;</span> CREATE TABLE `books` <span class="token punctuation">(</span>`bookID` <span class="token function">INT</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> NOT NULL AUTO_INCREMENT COMMENT <span class="token char">'书id'</span><span class="token punctuation">,</span>`bookName` <span class="token function">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> NOT NULL COMMENT <span class="token char">'书名'</span><span class="token punctuation">,</span>`bookCounts` <span class="token function">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> NOT NULL COMMENT <span class="token char">'数量'</span><span class="token punctuation">,</span>`detail` <span class="token function">VARCHAR</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span> NOT NULL COMMENT <span class="token char">'描述'</span><span class="token punctuation">,</span>KEY `bookID` <span class="token punctuation">(</span>`bookID`<span class="token punctuation">)</span><span class="token punctuation">)</span> ENGINE<span class="token operator">=</span>INNODB <span class="token class-name">DEFAULT</span> CHARSET<span class="token operator">=</span>utf8 INSERT  INTO `books`<span class="token punctuation">(</span>`bookID`<span class="token punctuation">,</span>`bookName`<span class="token punctuation">,</span>`bookCounts`<span class="token punctuation">,</span>`detail`<span class="token punctuation">)</span>VALUES<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token char">'Java'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token char">'从入门到放弃'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token char">'MySQL'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token char">'从删库到跑路'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token char">'Linux'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token char">'从进门到进牢'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、基本环境搭建"><a href="#3、基本环境搭建" class="headerlink" title="3、基本环境搭建"></a>3、基本环境搭建</h2><h3 id="1、新建一Maven项目！ssmbuild-，-添加web的支持"><a href="#1、新建一Maven项目！ssmbuild-，-添加web的支持" class="headerlink" title="1、新建一Maven项目！ssmbuild ， 添加web的支持"></a>1、新建一Maven项目！ssmbuild ， 添加web的支持</h3><h3 id="2、导入相关的pom依赖！"><a href="#2、导入相关的pom依赖！" class="headerlink" title="2、导入相关的pom依赖！"></a>2、导入相关的pom依赖！</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token generics"><span class="token punctuation">&lt;</span>dependencies<span class="token punctuation">&gt;</span></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token class-name">Junit</span><span class="token operator">--</span><span class="token operator">&gt;</span>        <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>junit<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>junit<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">4.12</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>数据库驱动<span class="token operator">--</span><span class="token operator">&gt;</span>        <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>mysql<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>mysql<span class="token operator">-</span>connector<span class="token operator">-</span>java<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">5.1</span><span class="token number">.47</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 数据库连接池 <span class="token operator">--</span><span class="token operator">&gt;</span>        <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>mchange<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>c3p0<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">0.9</span><span class="token number">.5</span><span class="token number">.2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token class-name">Servlet</span> <span class="token operator">-</span> JSP <span class="token operator">--</span><span class="token operator">&gt;</span>        <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>javax<span class="token punctuation">.</span>servlet<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>servlet<span class="token operator">-</span>api<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">2.5</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>        <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>jsp<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>jsp<span class="token operator">-</span>api<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">2.2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>        <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>javax<span class="token punctuation">.</span>servlet<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>jstl<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">1.2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token class-name">Mybatis</span><span class="token operator">--</span><span class="token operator">&gt;</span>        <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>mybatis<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>mybatis<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">3.5</span><span class="token number">.2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>        <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>mybatis<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>mybatis<span class="token operator">-</span>spring<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">2.0</span><span class="token number">.2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token class-name">Spring</span><span class="token operator">--</span><span class="token operator">&gt;</span>        <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>webmvc<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">5.1</span><span class="token number">.9</span><span class="token punctuation">.</span>RELEASE<span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>        <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>jdbc<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">5.1</span><span class="token number">.9</span><span class="token punctuation">.</span>RELEASE<span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>        <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>projectlombok<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>lombok<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">1.18</span><span class="token number">.22</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependencies<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、Maven资源过滤设置"><a href="#3、Maven资源过滤设置" class="headerlink" title="3、Maven资源过滤设置"></a>3、Maven资源过滤设置</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token generics"><span class="token punctuation">&lt;</span>build<span class="token punctuation">&gt;</span></span>   <span class="token generics"><span class="token punctuation">&lt;</span>resources<span class="token punctuation">&gt;</span></span>       <span class="token generics"><span class="token punctuation">&lt;</span>resource<span class="token punctuation">&gt;</span></span>           <span class="token generics"><span class="token punctuation">&lt;</span>directory<span class="token punctuation">&gt;</span></span>src<span class="token operator">/</span>main<span class="token operator">/</span>java<span class="token operator">&lt;</span><span class="token operator">/</span>directory<span class="token operator">&gt;</span>           <span class="token generics"><span class="token punctuation">&lt;</span>includes<span class="token punctuation">&gt;</span></span>               <span class="token generics"><span class="token punctuation">&lt;</span>include<span class="token punctuation">&gt;</span></span><span class="token operator">*</span><span class="token operator">*</span><span class="token comment">/*.properties&lt;/include&gt;               &lt;include&gt;**/</span><span class="token operator">*</span><span class="token punctuation">.</span>xml<span class="token operator">&lt;</span><span class="token operator">/</span>include<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span><span class="token operator">/</span>includes<span class="token operator">&gt;</span>           <span class="token generics"><span class="token punctuation">&lt;</span>filtering<span class="token punctuation">&gt;</span></span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>filtering<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span><span class="token operator">/</span>resource<span class="token operator">&gt;</span>       <span class="token generics"><span class="token punctuation">&lt;</span>resource<span class="token punctuation">&gt;</span></span>           <span class="token generics"><span class="token punctuation">&lt;</span>directory<span class="token punctuation">&gt;</span></span>src<span class="token operator">/</span>main<span class="token operator">/</span>resources<span class="token operator">&lt;</span><span class="token operator">/</span>directory<span class="token operator">&gt;</span>           <span class="token generics"><span class="token punctuation">&lt;</span>includes<span class="token punctuation">&gt;</span></span>               <span class="token generics"><span class="token punctuation">&lt;</span>include<span class="token punctuation">&gt;</span></span><span class="token operator">*</span><span class="token operator">*</span><span class="token comment">/*.properties&lt;/include&gt;               &lt;include&gt;**/</span><span class="token operator">*</span><span class="token punctuation">.</span>xml<span class="token operator">&lt;</span><span class="token operator">/</span>include<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span><span class="token operator">/</span>includes<span class="token operator">&gt;</span>           <span class="token generics"><span class="token punctuation">&lt;</span>filtering<span class="token punctuation">&gt;</span></span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>filtering<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span><span class="token operator">/</span>resource<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>resources<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>build<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4、建立基本结构和配置框架！"><a href="#4、建立基本结构和配置框架！" class="headerlink" title="4、建立基本结构和配置框架！"></a>4、建立基本结构和配置框架！</h3><ul><li>com.kuang.pojo</li><li>com.kuang.dao</li><li>com.kuang.service</li><li>com.kuang.controller</li><li>mybatis-config.xml</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span> <span class="token operator">?</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE configuration       PUBLIC <span class="token string">"-//mybatis.org//DTD Config 3.0//EN"</span>       <span class="token string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span><span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>configuration<span class="token punctuation">&gt;</span></span> <span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>applicationContext.xml</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">?</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>beans xmlns<span class="token operator">=</span><span class="token string">"http://www.springframework.org/schema/beans"</span>      xmlns<span class="token operator">:</span>xsi<span class="token operator">=</span><span class="token string">"http://www.w3.org/2001/XMLSchema-instance"</span>      xsi<span class="token operator">:</span>schemaLocation<span class="token operator">=</span>"http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>beans       http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>beans<span class="token operator">/</span>spring<span class="token operator">-</span>beans<span class="token punctuation">.</span>xsd"<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>beans<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、Mybatis层编写"><a href="#4、Mybatis层编写" class="headerlink" title="4、Mybatis层编写"></a>4、Mybatis层编写</h2><h3 id="1、数据库配置文件"><a href="#1、数据库配置文件" class="headerlink" title="1、数据库配置文件"></a>1、数据库配置文件</h3><p> <strong>database.properties</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java">jdbc<span class="token punctuation">.</span>driver<span class="token operator">=</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>Driver</span>jdbc<span class="token punctuation">.</span>url<span class="token operator">=</span>jdbc<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">3306</span><span class="token operator">/</span>commdity<span class="token operator">?</span>useUnicode<span class="token operator">=</span><span class="token boolean">true</span><span class="token operator">&amp;&amp;</span>characterEncoding<span class="token operator">=</span>utf8jdbc<span class="token punctuation">.</span>username<span class="token operator">=</span>rootjdbc<span class="token punctuation">.</span>password<span class="token operator">=</span>root<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、IDEA关联数据库"><a href="#2、IDEA关联数据库" class="headerlink" title="2、IDEA关联数据库"></a>2、IDEA关联数据库</h3><h3 id="3、编写MyBatis的核心配置文件"><a href="#3、编写MyBatis的核心配置文件" class="headerlink" title="3、编写MyBatis的核心配置文件"></a>3、编写MyBatis的核心配置文件</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span> <span class="token operator">?</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE configuration        PUBLIC <span class="token string">"-//mybatis.org//DTD Config 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span><span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>configuration<span class="token punctuation">&gt;</span></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>   配置数据源 交给<span class="token class-name">Springq</span>去做<span class="token operator">--</span><span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>typeAliases<span class="token punctuation">&gt;</span></span>        <span class="token operator">&lt;</span><span class="token keyword">package</span> <span class="token namespace">name</span><span class="token operator">=</span><span class="token string">"leyue.ljp.pojo"</span><span class="token operator">/</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>typeAliases<span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>mappers<span class="token punctuation">&gt;</span></span>        <span class="token operator">&lt;</span>mapper <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"leyue.ljp.dao.BookMapper"</span><span class="token operator">/</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>mappers<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4、编写数据库对应的实体类"><a href="#4、编写数据库对应的实体类" class="headerlink" title="4、编写数据库对应的实体类"></a>4、编写数据库对应的实体类</h3><p>com.kuang.pojo.Books</p><p>使用lombok插件！</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">leyue<span class="token punctuation">.</span>ljp<span class="token punctuation">.</span>pojo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">AllArgsConstructor</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">NoArgsConstructor</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Books</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> bookID<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> bookName<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> bookCounts<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> details<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5、编写Dao层的-Mapper接口！"><a href="#5、编写Dao层的-Mapper接口！" class="headerlink" title="5、编写Dao层的 Mapper接口！"></a>5、编写Dao层的 Mapper接口！</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">leyue<span class="token punctuation">.</span>ljp<span class="token punctuation">.</span>dao</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">leyue<span class="token punctuation">.</span>ljp<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">Books</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">BookMapper</span> <span class="token punctuation">{</span>    <span class="token comment">//增加一个Book</span>    <span class="token keyword">int</span> <span class="token function">addBook</span><span class="token punctuation">(</span><span class="token class-name">Books</span> book<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//根据id删除一个Book</span>    <span class="token keyword">int</span> <span class="token function">deleteBookById</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//更新Book</span>    <span class="token keyword">int</span> <span class="token function">updateBook</span><span class="token punctuation">(</span><span class="token class-name">Books</span> books<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//根据id查询,返回一个Book</span>    <span class="token class-name">Books</span> <span class="token function">queryBookById</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//查询全部Book,返回list集合</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Books</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryAllBook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6、编写接口对应的-Mapper-xml-文件。"><a href="#6、编写接口对应的-Mapper-xml-文件。" class="headerlink" title="6、编写接口对应的 Mapper.xml 文件。"></a>6、编写接口对应的 Mapper.xml 文件。</h3><p>需要导入MyBatis的包；</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span> <span class="token operator">?</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE mapper        PUBLIC <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>mapper namespace<span class="token operator">=</span><span class="token string">"leyue.ljp.dao.BookMapper"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>增加一个<span class="token class-name">Book</span><span class="token operator">--</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>insert id<span class="token operator">=</span><span class="token string">"addBook"</span> parameterType<span class="token operator">=</span><span class="token string">"Books"</span><span class="token operator">&gt;</span>        insert into commdity<span class="token punctuation">.</span><span class="token function">books</span><span class="token punctuation">(</span>bookName<span class="token punctuation">,</span>bookCounts<span class="token punctuation">,</span>details<span class="token punctuation">)</span>        values <span class="token punctuation">(</span>#<span class="token punctuation">{</span>bookName<span class="token punctuation">}</span><span class="token punctuation">,</span> #<span class="token punctuation">{</span>bookCounts<span class="token punctuation">}</span><span class="token punctuation">,</span> #<span class="token punctuation">{</span>detail<span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>insert<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>根据id删除一个<span class="token class-name">Book</span><span class="token operator">--</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>delete id<span class="token operator">=</span><span class="token string">"deleteBookById"</span> parameterType<span class="token operator">=</span><span class="token string">"int"</span><span class="token operator">&gt;</span>        delete from commdity<span class="token punctuation">.</span>books where bookID<span class="token operator">=</span>#<span class="token punctuation">{</span>bookID<span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>delete<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>更新<span class="token class-name">Book</span><span class="token operator">--</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>update id<span class="token operator">=</span><span class="token string">"updateBook"</span> parameterType<span class="token operator">=</span><span class="token string">"Books"</span><span class="token operator">&gt;</span>        update commdity<span class="token punctuation">.</span>books        set bookName <span class="token operator">=</span> #<span class="token punctuation">{</span>bookName<span class="token punctuation">}</span><span class="token punctuation">,</span>bookCounts <span class="token operator">=</span> #<span class="token punctuation">{</span>bookCounts<span class="token punctuation">}</span><span class="token punctuation">,</span>details <span class="token operator">=</span> #<span class="token punctuation">{</span>detail<span class="token punctuation">}</span>        where bookID <span class="token operator">=</span> #<span class="token punctuation">{</span>bookID<span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>update<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>根据id查询<span class="token punctuation">,</span>返回一个<span class="token class-name">Book</span><span class="token operator">--</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">"queryBookById"</span> resultType<span class="token operator">=</span><span class="token string">"Books"</span><span class="token operator">&gt;</span>        select <span class="token operator">*</span> from commdity<span class="token punctuation">.</span>books        where bookID <span class="token operator">=</span> #<span class="token punctuation">{</span>bookID<span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>查询全部<span class="token class-name">Book</span><span class="token operator">--</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">"queryAllBook"</span> resultType<span class="token operator">=</span><span class="token string">"Books"</span><span class="token operator">&gt;</span>        SELECT <span class="token operator">*</span> from commdity<span class="token punctuation">.</span>books    <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>mapper<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7、编写Service层的接口和实现类"><a href="#7、编写Service层的接口和实现类" class="headerlink" title="7、编写Service层的接口和实现类"></a>7、编写Service层的接口和实现类</h3><p>接口类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">leyue<span class="token punctuation">.</span>ljp<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">leyue<span class="token punctuation">.</span>ljp<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">Books</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">Mapper</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Repository</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token comment">//BookService:底下需要去实现,调用dao层</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">BookService</span> <span class="token punctuation">{</span>    <span class="token comment">//增加一个Book</span>    <span class="token keyword">int</span> <span class="token function">addBook</span><span class="token punctuation">(</span><span class="token class-name">Books</span> book<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//根据id删除一个Book</span>    <span class="token keyword">int</span> <span class="token function">deleteBookById</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//更新Book</span>    <span class="token keyword">int</span> <span class="token function">updateBook</span><span class="token punctuation">(</span><span class="token class-name">Books</span> books<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//根据id查询,返回一个Book</span>    <span class="token class-name">Books</span> <span class="token function">queryBookById</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//查询全部Book,返回list集合</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Books</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryAllBook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实现类：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">leyue<span class="token punctuation">.</span>ljp<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">leyue<span class="token punctuation">.</span>ljp<span class="token punctuation">.</span>dao<span class="token punctuation">.</span></span><span class="token class-name">BookMapper</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">leyue<span class="token punctuation">.</span>ljp<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">Books</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BookServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">BookService</span> <span class="token punctuation">{</span>    <span class="token comment">//调用dao层的操作，设置一个set接口，方便Spring管理</span>    <span class="token keyword">private</span> <span class="token class-name">BookMapper</span> bookMapper<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBookMapper</span><span class="token punctuation">(</span><span class="token class-name">BookMapper</span> bookMapper<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>bookMapper <span class="token operator">=</span> bookMapper<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">addBook</span><span class="token punctuation">(</span><span class="token class-name">Books</span> book<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> bookMapper<span class="token punctuation">.</span><span class="token function">addBook</span><span class="token punctuation">(</span>book<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">deleteBookById</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> bookMapper<span class="token punctuation">.</span><span class="token function">deleteBookById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">updateBook</span><span class="token punctuation">(</span><span class="token class-name">Books</span> books<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> bookMapper<span class="token punctuation">.</span><span class="token function">updateBook</span><span class="token punctuation">(</span>books<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">Books</span> <span class="token function">queryBookById</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> bookMapper<span class="token punctuation">.</span><span class="token function">queryBookById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Books</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryAllBook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> bookMapper<span class="token punctuation">.</span><span class="token function">queryAllBook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>OK，到此，底层需求操作编写完毕！</strong></p><h2 id="5、Spring层"><a href="#5、Spring层" class="headerlink" title="5、Spring层"></a>5、Spring层</h2><h3 id="1、配置Spring整合MyBatis，我们这里数据源使用c3p0连接池；"><a href="#1、配置Spring整合MyBatis，我们这里数据源使用c3p0连接池；" class="headerlink" title="1、配置Spring整合MyBatis，我们这里数据源使用c3p0连接池；"></a>1、配置<strong>Spring整合MyBatis</strong>，我们这里数据源使用c3p0连接池；</h3><h3 id="2、我们去编写Spring整合Mybatis的相关的配置文件；spring-dao-xml"><a href="#2、我们去编写Spring整合Mybatis的相关的配置文件；spring-dao-xml" class="headerlink" title="2、我们去编写Spring整合Mybatis的相关的配置文件；spring-dao.xml"></a>2、我们去编写Spring整合Mybatis的相关的配置文件；spring-dao.xml</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">?</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>beans xmlns<span class="token operator">=</span><span class="token string">"http://www.springframework.org/schema/beans"</span>       xmlns<span class="token operator">:</span>xsi<span class="token operator">=</span><span class="token string">"http://www.w3.org/2001/XMLSchema-instance"</span>       xmlns<span class="token operator">:</span>context<span class="token operator">=</span><span class="token string">"http://www.springframework.org/schema/context"</span>       xsi<span class="token operator">:</span>schemaLocation<span class="token operator">=</span>"http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>beans       http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>beans<span class="token operator">/</span>spring<span class="token operator">-</span>beans<span class="token punctuation">.</span>xsd       http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>context       https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>context<span class="token operator">/</span>spring<span class="token operator">-</span>context<span class="token punctuation">.</span>xsd"<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 配置整合mybatis <span class="token operator">--</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token number">1.</span>关联数据库文件 <span class="token operator">--</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>context<span class="token operator">:</span>property<span class="token operator">-</span>placeholder location<span class="token operator">=</span><span class="token string">"classpath:database.properties"</span><span class="token operator">/</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token number">2.</span>数据库连接池 <span class="token operator">--</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>数据库连接池        dbcp 半自动化操作 不能自动连接        c3p0 自动化操作（自动的加载配置文件 并且设置到对象里面）    <span class="token operator">--</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>bean id<span class="token operator">=</span><span class="token string">"dataSource"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"com.mchange.v2.c3p0.ComboPooledDataSource"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 配置连接池属性 <span class="token operator">--</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"driverClass"</span> value<span class="token operator">=</span><span class="token string">"${jdbc.driver}"</span><span class="token operator">/</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"jdbcUrl"</span> value<span class="token operator">=</span><span class="token string">"${jdbc.url}"</span><span class="token operator">/</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"user"</span> value<span class="token operator">=</span><span class="token string">"${jdbc.username}"</span><span class="token operator">/</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"password"</span> value<span class="token operator">=</span><span class="token string">"${jdbc.password}"</span><span class="token operator">/</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> c3p0连接池的私有属性 <span class="token operator">--</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"maxPoolSize"</span> value<span class="token operator">=</span><span class="token string">"30"</span><span class="token operator">/</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"minPoolSize"</span> value<span class="token operator">=</span><span class="token string">"10"</span><span class="token operator">/</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 关闭连接后不自动commit <span class="token operator">--</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"autoCommitOnClose"</span> value<span class="token operator">=</span><span class="token string">"false"</span><span class="token operator">/</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 获取连接超时时间 <span class="token operator">--</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"checkoutTimeout"</span> value<span class="token operator">=</span><span class="token string">"10000"</span><span class="token operator">/</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 当获取连接失败重试次数 <span class="token operator">--</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"acquireRetryAttempts"</span> value<span class="token operator">=</span><span class="token string">"2"</span><span class="token operator">/</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>bean<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token number">3.</span>配置<span class="token class-name">SqlSessionFactory</span>对象 <span class="token operator">--</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>bean id<span class="token operator">=</span><span class="token string">"sqlSessionFactory"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"org.mybatis.spring.SqlSessionFactoryBean"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 注入数据库连接池 <span class="token operator">--</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"dataSource"</span> ref<span class="token operator">=</span><span class="token string">"dataSource"</span><span class="token operator">/</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 配置<span class="token class-name">MyBaties</span>全局配置文件<span class="token operator">:</span>mybatis<span class="token operator">-</span>config<span class="token punctuation">.</span>xml <span class="token operator">--</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"configLocation"</span> value<span class="token operator">=</span><span class="token string">"classpath:mybatis-configger.xml"</span><span class="token operator">/</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>bean<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token number">4.</span>配置扫描<span class="token class-name">Dao</span>接口包，动态实现<span class="token class-name">Dao</span>接口注入到spring容器中 <span class="token operator">--</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>bean <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"org.mybatis.spring.mapper.MapperScannerConfigurer"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 注入sqlSessionFactory <span class="token operator">--</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"sqlSessionFactoryBeanName"</span> value<span class="token operator">=</span><span class="token string">"sqlSessionFactory"</span><span class="token operator">/</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 给出需要扫描<span class="token class-name">Dao</span>接口包 <span class="token operator">--</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"basePackage"</span> value<span class="token operator">=</span><span class="token string">"leyue.ljp.dao"</span><span class="token operator">/</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>bean<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>beans<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3、<strong>Spring整合service层</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">?</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>beans xmlns<span class="token operator">=</span><span class="token string">"http://www.springframework.org/schema/beans"</span>       xmlns<span class="token operator">:</span>xsi<span class="token operator">=</span><span class="token string">"http://www.w3.org/2001/XMLSchema-instance"</span>       xmlns<span class="token operator">:</span>context<span class="token operator">=</span><span class="token string">"http://www.springframework.org/schema/context"</span>       xsi<span class="token operator">:</span>schemaLocation<span class="token operator">=</span>"http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>beans       http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>beans<span class="token operator">/</span>spring<span class="token operator">-</span>beans<span class="token punctuation">.</span>xsd http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>context https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>context<span class="token operator">/</span>spring<span class="token operator">-</span>context<span class="token punctuation">.</span>xsd"<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>    扫描service 下面的包<span class="token operator">--</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>context<span class="token operator">:</span>component<span class="token operator">-</span>scan base<span class="token operator">-</span><span class="token keyword">package</span><span class="token operator">=</span><span class="token string">"leyue.ljp.service"</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>    将我们的所有业务类注入到<span class="token class-name">Spring</span> 可以通过配置  或者注解实现<span class="token operator">--</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>bean id<span class="token operator">=</span><span class="token string">"BookServiceImpl"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"leyue.ljp.service.BookServiceImpl"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"bookMapper"</span> ref<span class="token operator">=</span><span class="token string">"bookMapper"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>property<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>bean<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>    声明是事务配置<span class="token operator">--</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>bean id<span class="token operator">=</span><span class="token string">"transactionManager"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"dataSource"</span> ref<span class="token operator">=</span><span class="token string">"dataSource"</span><span class="token operator">/</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>bean<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>    aop事务支持<span class="token operator">--</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>beans<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Spring层搞定！再次理解一下，Spring就是一个大杂烩，一个容器！对吧！</p><h2 id="6、SpringMVC层"><a href="#6、SpringMVC层" class="headerlink" title="6、SpringMVC层"></a>6、SpringMVC层</h2><h3 id="1、web-xml"><a href="#1、web-xml" class="headerlink" title="1、web.xml"></a>1、<strong>web.xml</strong></h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">?</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>web<span class="token operator">-</span>app xmlns<span class="token operator">=</span><span class="token string">"http://xmlns.jcp.org/xml/ns/javaee"</span>         xmlns<span class="token operator">:</span>xsi<span class="token operator">=</span><span class="token string">"http://www.w3.org/2001/XMLSchema-instance"</span>         xsi<span class="token operator">:</span>schemaLocation<span class="token operator">=</span><span class="token string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"</span>         version<span class="token operator">=</span><span class="token string">"4.0"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token class-name">DispatcherServlet</span><span class="token operator">--</span><span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>servlet<span class="token punctuation">&gt;</span></span>        <span class="token operator">&lt;</span>servlet<span class="token operator">-</span>name<span class="token operator">&gt;</span><span class="token class-name">DispatcherServlet</span><span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span>name<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>servlet<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">&gt;</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>DispatcherServlet</span><span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>init<span class="token operator">-</span>param<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>param<span class="token operator">-</span>name<span class="token operator">&gt;</span>contextConfigLocation<span class="token operator">&lt;</span><span class="token operator">/</span>param<span class="token operator">-</span>name<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>一定要注意<span class="token operator">:</span>我们这里加载的是总的配置文件，之前被这里坑了！<span class="token operator">--</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>param<span class="token operator">-</span>value<span class="token operator">&gt;</span>classpath<span class="token operator">:</span>applicationContext<span class="token punctuation">.</span>xml<span class="token operator">&lt;</span><span class="token operator">/</span>param<span class="token operator">-</span>value<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>init<span class="token operator">-</span>param<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>load<span class="token operator">-</span>on<span class="token operator">-</span>startup<span class="token operator">&gt;</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>load<span class="token operator">-</span>on<span class="token operator">-</span>startup<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>servlet<span class="token operator">-</span>mapping<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>servlet<span class="token operator">-</span>name<span class="token operator">&gt;</span><span class="token class-name">DispatcherServlet</span><span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span>name<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>url<span class="token operator">-</span>pattern<span class="token operator">&gt;</span><span class="token operator">/</span><span class="token operator">&lt;</span><span class="token operator">/</span>url<span class="token operator">-</span>pattern<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span>mapping<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>encodingFilter<span class="token operator">--</span><span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>filter<span class="token punctuation">&gt;</span></span>        <span class="token operator">&lt;</span>filter<span class="token operator">-</span>name<span class="token operator">&gt;</span>encodingFilter<span class="token operator">&lt;</span><span class="token operator">/</span>filter<span class="token operator">-</span>name<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>filter<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">&gt;</span>            <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>CharacterEncodingFilter</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>filter<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>init<span class="token operator">-</span>param<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>param<span class="token operator">-</span>name<span class="token operator">&gt;</span>encoding<span class="token operator">&lt;</span><span class="token operator">/</span>param<span class="token operator">-</span>name<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>param<span class="token operator">-</span>value<span class="token operator">&gt;</span>utf<span class="token operator">-</span><span class="token number">8</span><span class="token operator">&lt;</span><span class="token operator">/</span>param<span class="token operator">-</span>value<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>init<span class="token operator">-</span>param<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>filter<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>filter<span class="token operator">-</span>mapping<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>filter<span class="token operator">-</span>name<span class="token operator">&gt;</span>encodingFilter<span class="token operator">&lt;</span><span class="token operator">/</span>filter<span class="token operator">-</span>name<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>url<span class="token operator">-</span>pattern<span class="token operator">&gt;</span><span class="token comment">/*&lt;/url-pattern&gt;    &lt;/filter-mapping&gt;    &lt;!--Session过期时间--&gt;    &lt;session-config&gt;        &lt;session-timeout&gt;15&lt;/session-timeout&gt;    &lt;/session-config&gt;&lt;/web-app&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、spring-mvc-xml"><a href="#2、spring-mvc-xml" class="headerlink" title="2、spring-mvc.xml"></a>2、<strong>spring-mvc.xml</strong></h3><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>mvc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/mvc<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans.xsd   http://www.springframework.org/schema/context   http://www.springframework.org/schema/context/spring-context.xsd   http://www.springframework.org/schema/mvc   https://www.springframework.org/schema/mvc/spring-mvc.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 配置SpringMVC --&gt;</span>    <span class="token comment">&lt;!-- 1.开启SpringMVC注解驱动 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>annotation-driven</span> <span class="token punctuation">/&gt;</span></span>    <span class="token comment">&lt;!-- 2.静态资源默认servlet配置--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>default-servlet-handler</span><span class="token punctuation">/&gt;</span></span>    <span class="token comment">&lt;!-- 3.配置jsp 显示ViewResolver视图解析器 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.springframework.web.servlet.view.InternalResourceViewResolver<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewClass<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.springframework.web.servlet.view.JstlView<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prefix<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/WEB-INF/jsp/<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>suffix<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.jsp<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 4.扫描web相关的bean --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>leyue.ljp.controller<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、Spring配置整合文件"><a href="#3、Spring配置整合文件" class="headerlink" title="3、Spring配置整合文件"></a>3、Spring配置整合文件</h3><p><strong>applicationContext.xml</strong></p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans       http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>import</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>classpath:spring-dao.xml<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>import</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>spring-service.xml<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>import</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>classpath:spring-mvc.xml<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>配置文件，暂时结束！</strong></p><h3 id="Controller-和-视图层编写"><a href="#Controller-和-视图层编写" class="headerlink" title="Controller 和 视图层编写"></a><strong>Controller 和 视图层编写</strong></h3><h4 id="1、BookController-类编写"><a href="#1、BookController-类编写" class="headerlink" title="1、BookController 类编写"></a>1、BookController 类编写</h4><p> 方法一：查询全部书籍</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">leyue<span class="token punctuation">.</span>ljp<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">leyue<span class="token punctuation">.</span>ljp<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">Books</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">leyue<span class="token punctuation">.</span>ljp<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">BookService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">leyue<span class="token punctuation">.</span>ljp<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">BookServiceImpl</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Qualifier</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span><span class="token class-name">Model</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/book"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BookController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token annotation punctuation">@Qualifier</span><span class="token punctuation">(</span><span class="token string">"BookServiceImpl"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">BookService</span> bookService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/allBook"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token class-name">Model</span> model<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Books</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> bookService<span class="token punctuation">.</span><span class="token function">queryAllBook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"list"</span><span class="token punctuation">,</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"allBook"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2、编写首页-index-jsp"><a href="#2、编写首页-index-jsp" class="headerlink" title="2、编写首页 index.jsp"></a>2、编写首页 <strong>index.jsp</strong></h4><pre class="line-numbers language-jsp" data-language="jsp"><code class="language-jsp">&lt;%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %&gt;&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;  &lt;title&gt;首页&lt;/title&gt;  &lt;style type="text/css"&gt;    a {      text-decoration: none;      color: black;      font-size: 18px;    }    h3 {      width: 180px;      height: 38px;      margin: 100px auto;      text-align: center;      line-height: 38px;      background: deepskyblue;      border-radius: 4px;    }  &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h3&gt;  &lt;a href="${pageContext.request.contextPath}/book/allBook"&gt;点击进入列表页&lt;/a&gt;&lt;/h3&gt;&lt;/body&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3、书籍列表页面-allbook-jsp"><a href="#3、书籍列表页面-allbook-jsp" class="headerlink" title="3、书籍列表页面 allbook.jsp"></a>3、书籍列表页面 <strong>allbook.jsp</strong></h4><pre class="line-numbers language-jsp" data-language="jsp"><code class="language-jsp">&lt;%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %&gt;&lt;%@ page contentType="text/html;charset=UTF-8" language="java" %&gt;&lt;html&gt;&lt;head&gt;    &lt;title&gt;书籍列表&lt;/title&gt;    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;    &lt;!-- 引入 Bootstrap --&gt;    &lt;link href="https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;div class="container"&gt;    &lt;div class="row clearfix"&gt;        &lt;div class="col-md-12 column"&gt;            &lt;div class="page-header"&gt;                &lt;h1&gt;                    &lt;small&gt;书籍列表 —— 显示所有书籍&lt;/small&gt;                &lt;/h1&gt;            &lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;    &lt;div class="row"&gt;        &lt;div class="col-md-4 column" &gt;            &lt;a class="btn btn-primary" href="${pageContext.request.contextPath}/book/toAddBook"&gt;新增&lt;/a&gt;            &lt;a class="btn btn-primary" href="${pageContext.request.contextPath}/book/allBook"&gt;显示全部书籍&lt;/a&gt;        &lt;/div&gt;        &lt;div class="col-md-4 column" style="float: right"&gt;&lt;%--            查询书籍--%&gt;            &lt;form class="form-inline" action="${pageContext.request.contextPath}/book/queryBook" method="post"&gt;                &lt;span style="color: red;font-weight: bold"&gt;${error}&lt;/span&gt;                &lt;input type="text" name="queryBookName" class="form-control" placeholder="请输入要查询的书籍名称" &gt;                &lt;input type="submit" value="查询" class="btn btn-primary" &gt;            &lt;/form&gt;        &lt;/div&gt;    &lt;/div&gt;    &lt;div class="row clearfix"&gt;        &lt;div class="col-md-12 column"&gt;            &lt;table class="table table-hover table-striped"&gt;                &lt;thead&gt;                &lt;tr&gt;                    &lt;th&gt;书籍编号&lt;/th&gt;                    &lt;th&gt;书籍名字&lt;/th&gt;                    &lt;th&gt;书籍数量&lt;/th&gt;                    &lt;th&gt;书籍详情&lt;/th&gt;                    &lt;th&gt;操作&lt;/th&gt;                &lt;/tr&gt;                &lt;/thead&gt;                &lt;tbody&gt;                &lt;c:forEach var="book" items="${requestScope.get('list')}"&gt;                    &lt;tr&gt;                        &lt;td&gt;${book.getBookID()}&lt;/td&gt;                        &lt;td&gt;${book.getBookName()}&lt;/td&gt;                        &lt;td&gt;${book.getBookCounts()}&lt;/td&gt;                        &lt;td&gt;${book.getDetails()}&lt;/td&gt;                        &lt;td&gt;                            &lt;a href="${pageContext.request.contextPath}/book/toUpdateBook?id=${book.getBookID()}"class="btn btn-primary"&gt;更改&lt;/a&gt; |                            &lt;a href="${pageContext.request.contextPath}/book/del/${book.getBookID()}" class="btn btn-primary"&gt;删除&lt;/a&gt;                        &lt;/td&gt;                    &lt;/tr&gt;                &lt;/c:forEach&gt;                &lt;/tbody&gt;            &lt;/table&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4.查询 书籍（搜索框）</p><p>jsp:</p><pre class="line-numbers language-jsp" data-language="jsp"><code class="language-jsp">   &lt;div class="col-md-4 column" style="float: right"&gt;&lt;%-- 查询书籍--%&gt;            &lt;form class="form-inline" action="${pageContext.request.contextPath}/book/queryBook" method="post"&gt;                &lt;span style="color: red;font-weight: bold"&gt;${error}&lt;/span&gt;                &lt;input type="text" name="queryBookName" class="form-control" placeholder="请输入要查询的书籍名称" &gt;                &lt;input type="submit" value="查询" class="btn btn-primary" &gt;            &lt;/form&gt;        &lt;/div&gt;    &lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>dao层添加一个接口：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Books</span> <span class="token function">queryBookName</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"bookName"</span><span class="token punctuation">)</span><span class="token class-name">String</span> bookName<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接口的xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>queryBookName<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Books<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    select * from books where bookName =#{bookName}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>业务层：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Books</span> <span class="token function">queryBookName</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"bookName"</span><span class="token punctuation">)</span><span class="token class-name">String</span> bookName<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>业务的实现类：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">Books</span> <span class="token function">queryBookName</span><span class="token punctuation">(</span><span class="token class-name">String</span> bookName<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> bookMapper<span class="token punctuation">.</span><span class="token function">queryBookName</span><span class="token punctuation">(</span>bookName<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>Controller:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/queryBook"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">queryBookName</span><span class="token punctuation">(</span><span class="token class-name">String</span> queryBookName<span class="token punctuation">,</span> <span class="token class-name">Model</span> model<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>    <span class="token comment">//调用查询方法</span>    <span class="token class-name">Books</span> books <span class="token operator">=</span> bookService<span class="token punctuation">.</span><span class="token function">queryBookName</span><span class="token punctuation">(</span>queryBookName<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>books<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Books</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Books</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>books<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>books<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        list <span class="token operator">=</span> bookService<span class="token punctuation">.</span><span class="token function">queryAllBook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">,</span><span class="token string">"未查到"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"list"</span><span class="token punctuation">,</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"allBook"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-运行结果"><a href="#7-运行结果" class="headerlink" title="7.运行结果"></a>7.运行结果</h2><p><img src="C:\Users\23878\AppData\Roaming\Typora\typora-user-images\image-20220121211730069.png" alt="image-20220121211730069"></p><p>1.这个useSSL是错的</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">jdbc.url</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql://localhost:3306/commdity?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf8</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>改为</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">jdbc.url</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql://localhost:3306/commdity?useUnicode=true&amp;&amp;characterEncoding=utf8</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.还有就是spring-dao.xml里面的Dao接口包写错了 应改为：</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>basePackage<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>leyue.ljp.dao<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></bean>]]></content>
      
      
      
        <tags>
            
            <tag> SpringMvc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot</title>
      <link href="/2022/03/27/Springboot/"/>
      <url>/2022/03/27/Springboot/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Spring-boot学习"><a href="#Spring-boot学习" class="headerlink" title="Spring-boot学习"></a>Spring-boot学习</h1><p>官方文档：<a href="https://docs.spring.io/spring-boot/docs/current/reference/html/index.html">https://docs.spring.io/spring-boot/docs/current/reference/html/index.html</a></p><h2 id="一：SpringBoot-HelloWord"><a href="#一：SpringBoot-HelloWord" class="headerlink" title="一：SpringBoot HelloWord"></a>一：SpringBoot HelloWord</h2><p>一个功能：浏览器发送hello请求并处理，相应Hello Word字符串</p><h3 id="1-创建一个新的Maven工程；Jar"><a href="#1-创建一个新的Maven工程；Jar" class="headerlink" title="1.创建一个新的Maven工程；Jar"></a>1.创建一个新的Maven工程；Jar</h3><h3 id="2-导入一个Springboot相关的依赖"><a href="#2-导入一个Springboot相关的依赖" class="headerlink" title="2.导入一个Springboot相关的依赖"></a>2.导入一个Springboot相关的依赖</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token generics"><span class="token punctuation">&lt;</span>parent<span class="token punctuation">&gt;</span></span>    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>parent<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">1.5</span><span class="token number">.9</span><span class="token punctuation">.</span>RELEASE<span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>parent<span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>dependencies<span class="token punctuation">&gt;</span></span>    <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>        <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>        <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>web<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>dependencies<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-编写一个主程序类MainApplication-启动主程序"><a href="#3-编写一个主程序类MainApplication-启动主程序" class="headerlink" title="3.编写一个主程序类MainApplication 启动主程序"></a>3.编写一个主程序类MainApplication 启动主程序</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">leyue<span class="token punctuation">.</span>ljp<span class="token punctuation">.</span>boot</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span><span class="token punctuation">;</span><span class="token comment">/** *  @SpringBootApplication 来标注主程序类 说明这是一个Spring boot应用 */</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//将springboot启动起来</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">MainApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-编写Contrtoller层和Service层"><a href="#4-编写Contrtoller层和Service层" class="headerlink" title="4.编写Contrtoller层和Service层"></a>4.编写Contrtoller层和Service层</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">leyue<span class="token punctuation">.</span>ljp<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ResponseBody</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/hello"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">handle01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Hello my first spring-boot2!"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5、运行主程序测试"><a href="#5、运行主程序测试" class="headerlink" title="5、运行主程序测试"></a>5、运行主程序测试</h3><h3 id="6、简化部署"><a href="#6、简化部署" class="headerlink" title="6、简化部署"></a>6、简化部署</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 这个插件，可以将应用打包成一个可执行的jar包；<span class="token operator">--</span><span class="token operator">&gt;</span>   <span class="token generics"><span class="token punctuation">&lt;</span>build<span class="token punctuation">&gt;</span></span>       <span class="token generics"><span class="token punctuation">&lt;</span>plugins<span class="token punctuation">&gt;</span></span>           <span class="token generics"><span class="token punctuation">&lt;</span>plugin<span class="token punctuation">&gt;</span></span>               <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>               <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>maven<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span><span class="token operator">/</span>plugins<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>build<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、Spring在核心配置文件"><a href="#二、Spring在核心配置文件" class="headerlink" title="二、Spring在核心配置文件"></a>二、Spring在核心配置文件</h2><h3 id="使用-Value进行映射"><a href="#使用-Value进行映射" class="headerlink" title="使用@Value进行映射"></a>使用@Value进行映射</h3><p>一、Spring在核心配置文件application.properties自定义配置一个一个获取@Value</p><h3 id="1-新建一个application-properties"><a href="#1-新建一个application-properties" class="headerlink" title="1.新建一个application.properties"></a>1.新建一个application.properties</h3><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">server.port</span><span class="token punctuation">=</span><span class="token attr-value">8080</span><span class="token attr-name">server.servlet.context-path</span><span class="token punctuation">=</span><span class="token attr-value">/</span><span class="token attr-name">school.name</span><span class="token punctuation">=</span><span class="token attr-value">zhangshanzhiyejishuxueyuean</span><span class="token attr-name">websit</span><span class="token punctuation">=</span><span class="token attr-value">https:175.178.51.999</span><span class="token attr-name">asd.name</span><span class="token punctuation">=</span><span class="token attr-value">李津澎</span><span class="token attr-name">asd.websit</span><span class="token punctuation">=</span><span class="token attr-value">https://175.178.51.1111</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-新建一个config的包-新建asdConfig的类"><a href="#2-新建一个config的包-新建asdConfig的类" class="headerlink" title="2.新建一个config的包 新建asdConfig的类"></a>2.新建一个config的包 新建asdConfig的类</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">leyue<span class="token punctuation">.</span>ljp<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>context<span class="token punctuation">.</span>properties<span class="token punctuation">.</span></span><span class="token class-name">ConfigurationProperties</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Component</span><span class="token comment">//交给Spring管理</span><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"asd"</span><span class="token punctuation">)</span><span class="token comment">//标注这个是头的名称 对应properties那边</span><span class="token keyword">public</span> <span class="token keyword">class</span> asdConfig <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> websit<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getWebsit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> websit<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setWebsit</span><span class="token punctuation">(</span><span class="token class-name">String</span> websit<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>websit <span class="token operator">=</span> websit<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-新建一个Controller"><a href="#3-新建一个Controller" class="headerlink" title="3.新建一个Controller"></a>3.新建一个Controller</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">leyue<span class="token punctuation">.</span>ljp<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">leyue<span class="token punctuation">.</span>ljp<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>config<span class="token punctuation">.</span>asdConfig</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IndexController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span> <span class="token comment">//自动注入</span>    <span class="token keyword">private</span> asdConfig asdConfig<span class="token punctuation">;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"fuck"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">fuck</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"asdConfig："</span><span class="token operator">+</span>asdConfig<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">" "</span><span class="token operator">+</span><span class="token string">"asdwebsit:"</span><span class="token operator">+</span>asdConfig<span class="token punctuation">.</span><span class="token function">getWebsit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-测试"><a href="#4-测试" class="headerlink" title="4.测试"></a>4.测试</h3><h2 id="三、集成一个jsp"><a href="#三、集成一个jsp" class="headerlink" title="三、集成一个jsp"></a>三、集成一个jsp</h2>]]></content>
      
      
      
        <tags>
            
            <tag> Springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习网址</title>
      <link href="/2022/03/27/%E5%AD%A6%E4%B9%A0%E7%BD%91%E5%9D%80-1/"/>
      <url>/2022/03/27/%E5%AD%A6%E4%B9%A0%E7%BD%91%E5%9D%80-1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>1   <a href="https://www.showdoc.com.cn/1681863734575013/7907979523328270">https://www.showdoc.com.cn/1681863734575013/7907979523328270</a></p><p>2   <a href="https://www.swiper.com.cn/demo/">https://www.swiper.com.cn/demo/</a>             ：轮播图</p><p>3   <a href="https://v3.bootcss.com/">https://v3.bootcss.com/</a></p><p>4  <a href="https://man.ilovefishc.com/">https://man.ilovefishc.com/</a>                          ：html+css3</p><p>niuguwen.cn/                           :前端</p><p><a href="https://uniapp.dcloud.io/collocation/pages">https://uniapp.dcloud.io/collocation/pages</a>      ：微信小程序uiapp</p><p><a href="http://c.biancheng.net/view/9346.html">http://c.biancheng.net/view/9346.html</a>               ：C语言学习网站    <a href="http://c.biancheng.net/sitemap/">http://c.biancheng.net/sitemap/</a></p><p><a href="https://www.runoob.com/manual/jquery/">https://www.runoob.com/manual/jquery/</a>               :jquery学习网站</p><p><a href="http://lvyestudy.com/">绿叶学习网 - 给你初恋般的感觉 (lvyestudy.com)</a>     :html5+css3学习网站</p><p><a href="https://pan.baidu.com/disk/home#/all?vmode=list&amp;path=%2F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%94%B6%E9%93%B6%E5%8F%B0%2F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%2BNodejs%E6%97%A0%E4%BA%BA%E6%94%B6%E9%93%B6%E3%80%81%E6%97%A0%E4%BA%BA%E5%80%BC%E5%AE%88%E8%B4%A7%E6%9E%B6%E3%80%81%E6%97%A0%E4%BA%BA%E9%9B%B6%E5%94%AE%E6%94%B6%E9%93%B6%E7%B3%BB%E7%BB%9F%20%E3%80%9025%E8%AE%B2%E3%80%91">https://pan.baidu.com/disk/home#/all?vmode=list&amp;path=%2F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%94%B6%E9%93%B6%E5%8F%B0%2F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%2BNodejs%E6%97%A0%E4%BA%BA%E6%94%B6%E9%93%B6%E3%80%81%E6%97%A0%E4%BA%BA%E5%80%BC%E5%AE%88%E8%B4%A7%E6%9E%B6%E3%80%81%E6%97%A0%E4%BA%BA%E9%9B%B6%E5%94%AE%E6%94%B6%E9%93%B6%E7%B3%BB%E7%BB%9F%20%E3%80%9025%E8%AE%B2%E3%80%91</a>                                       :我的百度网盘</p><p><a href="https://www.yuanlrc.com/product/free_product_list.html?page=3&amp;sort=rating">https://www.yuanlrc.com/product/free_product_list.html?page=3&amp;sort=rating</a>     ：前端+后端猿来入此</p><p>chrome://downloads/</p><p><a href="https://antv.vision/zh">https://antv.vision/zh</a>         :学习数据网站</p><p><a href="https://www.starbucks.com.cn/">https://www.starbucks.com.cn/</a>  ：星巴克网站响应式</p><p><a href="https://www.zaixiankaoshi.com/online/search/?keyword=%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F&amp;type=2">https://www.zaixiankaoshi.com/online/search/?keyword=%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F&amp;type=2</a>   ：微信小程序期末考试的试题网站</p><p><a href="https://www.zaixiankaoshi.com/online/paper/detail/?paperid=3777542">https://www.zaixiankaoshi.com/online/paper/detail/?paperid=3777542</a>             ：微信小程序期末考试的试题网站</p><p><a href="https://lbs.qq.com/dev/console/application/mine">https://lbs.qq.com/dev/console/application/mine</a>   :腾讯地图网址</p><p><a href="https://blog.csdn.net/XXY411636013/article/details/101778141?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164122222416781685356693%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=164122222416781685356693&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-101778141.pc_search_result_control_group&amp;utm_term=mybatis%E7%8B%82%E7%A5%9E+&amp;spm=1018.2226.3001.4187">https://blog.csdn.net/XXY411636013/article/details/101778141?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164122222416781685356693%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=164122222416781685356693&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-101778141.pc_search_result_control_group&amp;utm_term=mybatis%E7%8B%82%E7%A5%9E+&amp;spm=1018.2226.3001.4187</a>              mybatis网址</p><p><a href="https://www.bilibili.com/">https://www.bilibili.com/</a>    ：bili网址</p><p><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/">微信开放文档 (qq.com)</a></p><p><a href="https://www.bilibili.com/video/BV1nE41117BQ?p=9&amp;spm_id_from=pageDriver">https://www.bilibili.com/video/BV1nE41117BQ?p=9&amp;spm_id_from=pageDriver</a>    微信小程序项目</p><p><a href="https://cn.vuejs.org/v2/guide/instance.html">Vue 实例 — Vue.js (vuejs.org)</a>  ：vue</p><p><a href="https://www.bilibili.com/video/BV1YV411a7o7?p=3">【最新版】计算机二级MS office真题讲解_哔哩哔哩_bilibili</a>    :jsj</p><p><a href="https://www.bilibili.com/video/BV12J411m7MG?p=3">黑马程序员vue前端基础教程-4个小时带你快速入门vue_哔哩哔哩_bilibili</a>   vue</p><p><a href="https://www.bilibili.com/video/BV1NE411Q7Nx?p=3">【狂神说Java】Mybatis最新完整教程IDEA版通俗易懂_哔哩哔哩_bilibili</a>    mybatis</p><p><a href="https://www.bilibili.com/video/BV15741177Eh?p=5&amp;spm_id_from=pageDriver">https://www.bilibili.com/video/BV15741177Eh?p=5&amp;spm_id_from=pageDriver</a>   ：vue</p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习网址 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1+x考试</title>
      <link href="/2022/03/27/1-x%E8%80%83%E8%AF%95/"/>
      <url>/2022/03/27/1-x%E8%80%83%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Web前端开发初级模拟测试卷（六）"><a href="#Web前端开发初级模拟测试卷（六）" class="headerlink" title="Web前端开发初级模拟测试卷（六）"></a>Web前端开发初级模拟测试卷（六）</h1><p>一、单选题共30题，60分<br>1.阅读下面的JavaScript代码，输出结果是（） B</p><p>function f(y) { var x=y*y; return x; } for(x=0;x&lt; 5;x++) { y=f(x); document.write(y); }<br>1<br>A0 1 2 3 4</p><p>B0 1 4 9 16</p><p>C0 1 4 9 16 25</p><p>D以上答案都不对</p><p>2.在Javascript中，运行下面代码的结果是 A</p><p>function foo(x){ var num=5; bar=function(y){ return (x+y+(++num)); } } console.log(foo(2)); console.log(bar(10)); console.log(bar(10));<br>1<br>Aundefined,18,19<br>B17,18,19<br>C5,18,19<br>Dundefined,18,18<br>3.在JavaScript中，执行下面的代码后，num的值是() C</p><p>var str = “<a href="mailto:wang.wu@gmail.com">wang.wu@gmail.com</a>“; var num = str.indexOf(“.”);<br>1<br>A-1<br>B0<br>C4<br>D13<br>4.以下哪条语句会产生运行错误（） A</p><p>A var obj = ();<br>B var obj = {};<br>C var obj = [];<br>D var obj = //;<br>5.下面代码输出什么() C</p><p>var a=0,b=0; for(;a&lt;10,b&lt;7;a++,b++){ g=a+b; } console.log(g);<br>1<br>A16<br>B10<br>C12<br>D6<br>6.请选择结果为真的表达式（） C</p><p>Anull instanceof Object<br>Bnull === undefined<br>Cnull == undefined<br>DNaN == NaN<br>7.在HTML5中，哪个属性用于规定输入字段是必填的？ B</p><p>Areadonly<br>Brequired<br>Cvalidate<br>Dplaceholder<br>8.HTML5的正确doctype是()？ C</p><ul><li><em>A</em></li><li><em>B</em></li><li><em>C</em><br>1<br>2<br>3</li></ul><p>9.下列表达式成立的是() D</p><ul><li><em>A</em>parseInt(12.5)==parseFloat(12.5)</li><li><em>B</em>Number(“123abc”)==parseFloat(“123abc”)</li><li><em>C</em>isNaN(“abc”)==NaN</li><li><em>D</em>typeof NaN==”number”</li></ul><p>10.以下不属于background-clip的值的是（） D</p><p>Aborder-box<br>Bpadding-box<br>Ccontent-box<br>Dnone<br>11.设定一个元素按规定的动画执行，你需要运用什么规则？ B</p><p>Aanimation<br>Bkeyframes<br>Cflash<br>Dtransition<br>12.在HTML中，通过( )可以实现鼠标悬停在div上时，元素执行旋转45度效果 A</p><ul><li><em>A</em>div:hover{transform:rotate(45deg)}</li><li><em>B</em>div:hover{transform:translate(50px)}</li><li><em>C</em>div:hover{transform:scale(1.5)}</li><li><em>D</em>div:hover{transform:skew(45deg)};<br>1<br>2<br>3<br>4</li></ul><p>13.下面代码输出正确的是() parseInt(3, 8) parseInt(3, 2) parseInt(3, 0) D</p><p>A3, 3, 3<br>B3, 3, NaN<br>C3, NaN, NaN<br>Dother<br>14.在jQuery中，下列关于事件的说法错误的是（ ） A</p><p>AjQuery中用onclick绑定点击事件<br>BjQuery中用on来给未来元素绑定事件<br>CjQuery中用hover来绑定鼠标经过事件<br>DjQuery中存在冒泡事件，故需要阻止冒泡<br>15.让一个动画一直执行的属性是（） B</p><p>Aanimation-direction<br>Banimation-iteration-count<br>Canimation-play-state<br>Danimation-delay<br>16.关于flex说法正确的是（） A</p><p>Aflex 属性用于指定弹性子元素如何分配空间<br>Bflex:1应该写在弹性元素上<br>C设置flex:1无意义<br>Dflex是指设置固定定位<br>17.关于样式的优先级说法正确的是（） C</p><p>A内联样式&gt;!important&gt;内部样式&gt;外部样式&gt;!important<br>B!important&gt;内联样式&gt;内部样式&gt;外部样式<br>C以上都不正确<br>18.下面关于文件路径的说法错误的是（ ） B</p><p>A“…/”是返回当前目录的上一级目录<br>B“…/”是返回当前目录的下一级目录<br>C访问下一级目录直接输入相应的目录名即可<br>D文件路径指文件存储的位置<br>19.以下说法不正确的是（） A</p><p>AHTML5 标准还在制定中<br>BHTML5兼容以前HTML4下浏览器<br>C标签替代Flash<br>D简化的语法<br>20.在HTML中，下列有关邮箱的链接书写正确的是（） D</p><ul><li><em>A</em><a href="telnet:zhangming@aptech.com">发送邮件</a></li><li><em>B</em><a href="mail:zhangming@aptech.com">发送邮件</a></li><li><em>C</em><a href="ftp:zhangming@aptech.com">发送邮件</a></li><li><em>D</em><a href="mailto:zhangming@aptech.com">发送邮件</a><br>1<br>2<br>3<br>4</li></ul><p>21.设置盒子圆角的属性是（） C</p><p>Abox-sizing<br>Bbox-shadow<br>Cborder-radius<br>Dborder<br>22.在HTML中，( )用来表示特殊字符引号 D</p><p>A®<br>B©<br>C”进<br>D “”<br>23.关于box-shadow说法正确的是（） B</p><p>A设置文字投影<br>B第一个值是设置水平距离的<br>C第二个值是设置水平距离的<br>D第三个值是设置投影颜色的<br>24.将div类名以’c’开头元素添加文字为红色，书写正确的是（） A</p><p>Adiv[class^=c]{color:red}<br>Bdiv[class$=c]{color:red}<br>Cdiv[class=c]{color:red}<br>Ddiv[class*=c]{color:red}<br>25.在jQuery中，能够操作HTML代码及其文本的方法是（ ） C</p><p>Aattr()<br>Btext()<br>Chtml()<br>Dval()<br>26.每段文字都需要首行缩进两个字的的距离，该设置什么属性（） C</p><p>Atext-transform<br>Btext-align<br>Ctext-indent<br>Dtext-decoration<br>27.以下关于jQuery 节点的说法中错误是 C</p><p>AjQuery中用$(“.box”).insertBefore(ele1,ele2)给指定ele2前添加ele1元素<br>BjQuery中用$(“.box”).append(ele)给box类后添加ele元素<br>CjQuery中用$(“.box”).appendTo(ele)给box类后添加ele元素<br>DjQuery中用$(“.box”).insertAfter(ele1,ele2)给ele2后添加ele1元素<br>28.在以下选项中，关于JavaScript的Date对象描述正确的是 C</p><p>AgetDay( )方法能返回Date对象的一个月中的一天，其值为1<del>31<br>BgetDate( )方法能返回Date对象的一周中的一天，其值为0</del>6<br>CgetTime( )方法能返回某一时刻(1970年1月1日)依赖的毫秒数<br>DgetYear( )方法只能返回4位年份，长用于获取Date对象的年份<br>29.在HTML中，下面（）不属于HTML文档的基本组成部分 。 A</p><ul><li><em>A</em><style></STYTLE></li><li><em>B</em><BODY></BODY></li><li><em>C</em><HTML></HTML></li><li><em>D</em><HEAD></HEAD><br>1<br>2<br>3<br>4</li></ul><p>30.下列选项中定义标题最合理的是 C</p><ul><li><em>A</em><span class="header">文章标题</span></li><li><em>B</em><p><b>文章标题</b></p></li><li><em>C</em><h2>标题</h2></li><li><em>D</em><div>文章标题</div><br>1<br>2<br>3<br>4<br>二、多选题共15题，30分</li></ul><p>1.请选出正确的选项() ABCD</p><p>A属性要在开始标签中指定，用来表示该标签的性质和特性<br>B通常都是以“属性名&#x3D;“值””的形式来表示<br>C一个标签可以指定多个属性<br>D指定多个属性时不用区分顺序。<br>2.下面哪些是HTML5 新增的表单元素？ AC</p><p>Adatalist<br>Boptgroup<br>Coutput<br>Dlegend<br>3.嵌入在HTML文档中的图像格式可以是()？ ACD</p><p>A *.gif<br>B *.tif<br>C *.bmp<br>D *.jpg<br>4.关于语义化说法不正确的是（） ABC</p><p>A语义化的HTML有利于机器的阅读<br>BTable 属于过时的标签，遇到数据列表时，需尽量使用 div 来模拟表格<br>C语义化是HTML5带来的新概念，此前版本的HTML无法做到语义化<br>DHeader、article、address都属于语义化明确的标签<br>5.下面哪些是javascript中document的方法？ ACDE</p><p>AgetElementById<br>BgetElementsById<br>CgetElementsByTagName<br>DgetElementsByName<br>EgetElementsByClassName<br>6.background-origin的值有哪些（） BCD</p><p>Anone<br>Bborder-box<br>Ccontent-box<br>Dpadding-box<br>7.以下标签书写正确的是()？ BCD</p><ul><li><em>A</em><p/></li><li><em>B</em><br/></li><li><em>C</em><hr/></li><li><em>D</em><img/><br>1<br>2<br>3<br>4</li></ul><p>8.下列关于获取页面元素说法正确正确的是( ) AC</p><p>Adocument.getElementById(‘a’)是通过id值为a获取页面中的一个元素<br>Bdocument.getElementsByName(“na”)是通过name属性值为na获取页面中的一个元素<br>Cdocument.getElementsByTagName(“div”)是通过标签名获取去所有div;<br>D以上说法都不正确;<br>9.关于javascript事件说法不正确的是（） BCD</p><p>A事件由事件函数 事件源 事件对象组成<br>B当前事件作用在哪个标签上,哪个标签就是事件源<br>Conclick 就是一个事件对象<br>D图片切换使用javascript的change事件<br>10.下列选项中属于jQuery属性选择器的是（ ） AC</p><ul><li><em>A</em>$(“img[src$&#x3D;’.gif ‘]”)</li><li><em>B</em>$(“img”)</li><li><em>C</em>$(“[class][title]”)</li><li><em>D</em>$(“div&gt;span”)<br>1<br>2<br>3<br>4</li></ul><p>11.文字溢出显示省略号应该拥有那些属性（） ABCD</p><p>Aoverflow: hidden;<br>Bwhite-space: nowrap;<br>Ctext-overflow: ellipsis;<br>Dwidth:500px<br>12.在JavaScript语法中，下列说法正确的是 AB</p><p>AparseInt(43.12)返回值为43<br>BparseInt(‘abc43.12’)返回值为NaN<br>CparseFloat(‘43.13abc’)&#x3D;&#x3D;parseInt(43.12) 返回true<br>DisNaN(parseFloat(‘45.13abc’))返回true<br>13.网页的元素中包含以下HTML代码：</p> <div id="box"> <h2 id='top1' name='header1'>标题1</h2> <h2 id='top2' name='header2'>标题2</h2> </div> 1下列能弹出"标题1"的jQuery代码是（ ）。 AB<p>Aalert($(’#top1’).text());<br>Balert($(’[name&#x3D;header1]’).text());<br>Calert($(’[name&#x3D;‘header1’]’).text());<br>Dalert($(’#header1’).text());<br>14.关于media说法正确的是（） ABC</p><p>A@media 查询，你可以针对不同的媒体类型定义不同的样式<br>B@media 可以设计响应式页面<br>C当你重置浏览器大小的过程中，页面也会根据浏览器的宽度和高度重新渲染页面。<br>D可以用media属性在link中使用<br>15.以下（）是块级元素 AD</p><p>Adiv<br>Bimg<br>Cinput<br>Dp<br>三、判断题共5题，10分<br>1.在jquery中addClass()可以增加多个样式，各个样式间用：隔开 错</p><p>A对<br>B错<br>2.CSS Sprites整理起来更为方便，同一个按钮不同状态的图片也需要一个个切割出来并个别命名 错</p><p>A对<br>B错<br>3.padding:10px;只设置上边填充为10像素，其它三边为零像素 错</p><p>A对<br>B错<br>4.slideUp()方法通过高度变化（向上减小）来动态地隐藏所有匹配的元素 对</p><p>A对<br>B错<br>5.H5就是HTML5的简称 错</p><p>A对<br>B错</p></style></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 1+x考试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo部署到腾讯云</title>
      <link href="/2022/03/27/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
      <url>/2022/03/27/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E8%85%BE%E8%AE%AF%E4%BA%91/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="Hexo部署到腾讯云"><a href="#Hexo部署到腾讯云" class="headerlink" title="Hexo部署到腾讯云"></a>Hexo部署到腾讯云</h3><h5 id="1-环境"><a href="#1-环境" class="headerlink" title="1.环境"></a>1.环境</h5><p>本地Windows10操作系统</p><p>腾讯云Cenots7.6服务器</p><h5 id="2-准备"><a href="#2-准备" class="headerlink" title="2.准备"></a>2.准备</h5><p>Hexo 本地博客</p><p>Xshell 链接到你的服务器</p><h3 id="二、云服务器配置Git"><a href="#二、云服务器配置Git" class="headerlink" title="二、云服务器配置Git"></a>二、云服务器配置Git</h3><p>1.安装依赖库</p><pre class="line-numbers language-none"><code class="language-none">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.安装编译工具</p><pre class="line-numbers language-none"><code class="language-none">yum install gcc perl-ExtUtils-MakeMaker package<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3.查看git的版本y</p><pre class="line-numbers language-none"><code class="language-none">git version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4.删除git</p><pre class="line-numbers language-none"><code class="language-none">yum remove git -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5.下载解压最新版.</p><pre class="line-numbers language-apl" data-language="apl"><code class="language-apl">cd <span class="token monadic-operator operator">/</span>usr<span class="token monadic-operator operator">/</span>local<span class="token monadic-operator operator">/</span>src <span class="token constant">#</span>下载的目录 wget https<span class="token dfn builtin">:</span><span class="token monadic-operator operator">/</span><span class="token monadic-operator operator">/</span>www<span class="token dyadic-operator operator">.</span>kernel<span class="token dyadic-operator operator">.</span>org<span class="token monadic-operator operator">/</span>pub<span class="token monadic-operator operator">/</span>software<span class="token monadic-operator operator">/</span>scm<span class="token monadic-operator operator">/</span>git<span class="token monadic-operator operator">/</span>git<span class="token function">-</span><span class="token number">2.28</span><span class="token number">.0</span><span class="token dyadic-operator operator">.</span>tar<span class="token dyadic-operator operator">.</span>gz <span class="token constant">#</span>下载最新版 tar <span class="token function">-</span>zxvf git<span class="token function">-</span><span class="token number">2.28</span><span class="token number">.0</span><span class="token dyadic-operator operator">.</span>tar<span class="token dyadic-operator operator">.</span>gz <span class="token constant">#</span>解压到当前文件夹来源<span class="token dfn builtin">:</span> Fuchenchenle文章作者<span class="token dfn builtin">:</span> Fuchenchenle文章链接<span class="token dfn builtin">:</span> https<span class="token dfn builtin">:</span><span class="token monadic-operator operator">/</span><span class="token monadic-operator operator">/</span>fuchenchenle<span class="token dyadic-operator operator">.</span>cn<span class="token monadic-operator operator">/</span><span class="token number">2020</span><span class="token monadic-operator operator">/</span><span class="token number">08</span><span class="token monadic-operator operator">/</span><span class="token number">18</span><span class="token monadic-operator operator">/</span>hexo%E9%<span class="token number">83</span>%A8%E7%BD%B2%E8%<span class="token number">85</span>%BE%E8%AE%AF%E4%BA%<span class="token number">91</span><span class="token monadic-operator operator">/</span>本文章著作权归作者所有，任何形式的转载都请注明出处。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>6.编辑并安装</p><pre class="line-numbers language-api" data-language="api"><code class="language-api">cd git-2.28.0    #进入文件夹make prefix=/usr/local/git all    #编译源码make prefix=/usr/local/git install    #安装路径<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>7.配置git的环境变量</p><pre class="line-numbers language-none"><code class="language-none">echo 'export PATH=$PATH:/usr/local/git/bin' &gt;&gt; /etc/bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>8.刷新环境变量</p><pre class="line-numbers language-none"><code class="language-none">source /etc/bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>9.查看版本号</p><pre class="line-numbers language-none"><code class="language-none">git --version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>10创建git用户并且修改权限</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">adduser fuchen passwd fuchen chmod <span class="token number">740</span> <span class="token operator">/</span>etc<span class="token operator">/</span>sudoers vim <span class="token operator">/</span>etc<span class="token operator">/</span>sudoers root ALL<span class="token operator">=</span><span class="token punctuation">(</span>ALL<span class="token punctuation">)</span> ALL fuchen ALL<span class="token operator">=</span><span class="token punctuation">(</span>ALL<span class="token punctuation">)</span> ALL来源<span class="token operator">:</span> <span class="token class-name">Fuchenchenle</span>文章作者<span class="token operator">:</span> <span class="token class-name">Fuchenchenle</span>文章链接<span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>fuchenchenle<span class="token punctuation">.</span>cn<span class="token operator">/</span><span class="token number">2020</span><span class="token operator">/</span><span class="token number">08</span><span class="token operator">/</span><span class="token number">18</span><span class="token operator">/</span>hexo<span class="token operator">%</span>E9<span class="token operator">%</span><span class="token number">83</span><span class="token operator">%</span>A8<span class="token operator">%</span>E7<span class="token operator">%</span>BD<span class="token operator">%</span>B2<span class="token operator">%</span>E8<span class="token operator">%</span><span class="token number">85</span><span class="token operator">%</span>BE<span class="token operator">%</span>E8<span class="token operator">%</span>AE<span class="token operator">%</span>AF<span class="token operator">%</span>E4<span class="token operator">%</span>BA<span class="token operator">%</span><span class="token number">91</span><span class="token operator">/</span>本文章著作权归作者所有，任何形式的转载都请注明出处。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>11.本地windows10使用Gitbash创建密钥</p><pre class="line-numbers language-none"><code class="language-none">ssh-keygen -t rsa<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>12.将本地创建id_rsa.pub中文件复制</p><pre class="line-numbers language-none"><code class="language-none">su fuchenmkdir ~/.sshvim ~/.ssh/authorized_keys<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>13.本地测试</p><pre class="line-numbers language-none"><code class="language-none">ssh -v fuchen@服务器ip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="三、云服务器网站配置"><a href="#三、云服务器网站配置" class="headerlink" title="三、云服务器网站配置"></a>三、云服务器网站配置</h3><p>1.创建网站目录并且设置权限</p><pre class="line-numbers language-none"><code class="language-none">su rootmkdir /home/hexochown fuchen:fuchen -R /home/hexo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>2.安装Nginx</p><pre class="line-numbers language-none"><code class="language-none">yum install -y nginxsystemctl start nginx.service    #启动服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>3.修改Nginx配置文件</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">vim /etc/nginx/nginx.conf  server { listen 80 default_server; listen [::]:80 default_server; server_name fuchenchenle.cn; #域名  root /home/hexo; #网站目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4.重启服务器</p><pre class="line-numbers language-none"><code class="language-none">systemctl restart nginx.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5.建立git仓库</p><pre class="line-numbers language-none"><code class="language-none"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>6.同步网站根目录</p><pre class="line-numbers language-none"><code class="language-none">vim blog.git/hooks/post-receive#!/bin/shgit --work-tree=/home/hexo --git-dir=/home/fuchen/blog.git checkout -f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>7.修改权限</p><pre class="line-numbers language-none"><code class="language-none"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>8.在windows10本地hexo目录修改_config.yml文件</p><pre class="line-numbers language-none"><code class="language-none">deploy:  type: git  repository: fuchen@49.232.59.235:/home/fuchen/blog.git    #用户名@服务器Ip:git仓库位置  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>9.在本机gitbash部署</p><pre class="line-numbers language-none"><code class="language-none">hexo cleanhexo g -d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="四、常见报错"><a href="#四、常见报错" class="headerlink" title="四、常见报错"></a>四、常见报错</h3><h5 id="1-git-upload-pack-未找到命令"><a href="#1-git-upload-pack-未找到命令" class="headerlink" title="1. git-upload-pack: 未找到命令"></a>1. git-upload-pack: 未找到命令</h5><pre class="line-numbers language-none"><code class="language-none">bash: git-upload-pack: command not foundfatal: Could not read from remote repository.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>解决方法</p><pre class="line-numbers language-none"><code class="language-none">sudo ln -s  /usr/local/git/bin/git-upload-pack  /usr/bin/git-upload-pack<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="3-无法远程连接获取"><a href="#3-无法远程连接获取" class="headerlink" title="3.无法远程连接获取"></a>3.无法远程连接获取</h5><pre class="line-numbers language-none"><code class="language-none">fatal: Could not read from remote repository.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>解决方法</p><pre class="line-numbers language-none"><code class="language-none">重试或者 删掉本地ssh公钥重新上传至服务器<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="4-key出错"><a href="#4-key出错" class="headerlink" title="4.key出错"></a>4.key出错</h5><pre class="line-numbers language-none"><code class="language-none">Host key verification failed.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>解决方法</p><pre class="line-numbers language-none"><code class="language-none">ssh-keygen -R 你要访问的IP地址<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vue</title>
      <link href="/2022/03/27/Vue/"/>
      <url>/2022/03/27/Vue/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h1><h2 id="一-计算属性"><a href="#一-计算属性" class="headerlink" title="一.计算属性"></a>一.计算属性</h2><h2 id="1-1计算属性的本质"><a href="#1-1计算属性的本质" class="headerlink" title="1.1计算属性的本质"></a>1.1计算属性的本质</h2><p>fullname：{set（），get（）}</p><p>1.2计算属性和methods对比</p><p>计算属性在多次使用时 只会调用一次</p><p>他是有缓存的</p><h2 id="二-时间监听"><a href="#二-时间监听" class="headerlink" title="二.时间监听"></a>二.时间监听</h2><h3 id="2-1-事件监听基本使用"><a href="#2-1-事件监听基本使用" class="headerlink" title="2.1 事件监听基本使用"></a>2.1 事件监听基本使用</h3><h3 id="2-2-参数问题"><a href="#2-2-参数问题" class="headerlink" title="2.2 参数问题"></a>2.2 参数问题</h3><p>btnClick</p><p>btnClick(event)</p><p>btnClick(abcm,event)-&gt;$event</p><h3 id="2-3-修饰符"><a href="#2-3-修饰符" class="headerlink" title="2.3.修饰符"></a>2.3.修饰符</h3><p>stop</p><p>prevent</p><p>.enter</p><p>.once</p><p>.native</p><h2 id="三-条件判断"><a href="#三-条件判断" class="headerlink" title="三.条件判断"></a>三.条件判断</h2><h3 id="3-1-v-if-v-else-v-else"><a href="#3-1-v-if-v-else-v-else" class="headerlink" title="3.1 v-if  v-else v-else"></a>3.1 v-if  v-else v-else</h3><h3 id="3-2登录小案例"><a href="#3-2登录小案例" class="headerlink" title="3.2登录小案例"></a>3.2登录小案例</h3><h3 id="3-3-v-show"><a href="#3-3-v-show" class="headerlink" title="3.3 v-show"></a>3.3 v-show</h3><p>v-show和v-if的区别</p><p>四.循环遍历</p><p>4.1遍历数组</p><p>4.2遍历对象</p><p>value</p><p>value，key</p><p>value,key,index </p>]]></content>
      
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
